[{"E:\\material-django-react\\materialdjango\\frontend\\src\\index.js":"1","E:\\material-django-react\\materialdjango\\frontend\\src\\reportWebVitals.js":"2","E:\\material-django-react\\materialdjango\\frontend\\src\\App\\App.js":"3","E:\\material-django-react\\materialdjango\\frontend\\src\\Pages\\LoginPage.js":"4","E:\\material-django-react\\materialdjango\\frontend\\src\\Pages\\SignupPage.js":"5","E:\\material-django-react\\materialdjango\\frontend\\src\\Components\\Sidebar\\Sidebar.js":"6","E:\\material-django-react\\materialdjango\\frontend\\src\\assets\\jss\\Sidebar.js":"7","E:\\material-django-react\\materialdjango\\frontend\\src\\Components\\Navbar\\Navbar.js":"8","E:\\material-django-react\\materialdjango\\frontend\\src\\Components\\Controls\\NavMenu.js":"9","E:\\material-django-react\\materialdjango\\frontend\\src\\Pages\\LoginPagedemo.js":"10","E:\\material-django-react\\materialdjango\\frontend\\src\\routes.js":"11","E:\\material-django-react\\materialdjango\\frontend\\src\\Layouts\\Admin.js":"12","E:\\material-django-react\\materialdjango\\frontend\\src\\Pages\\Profile\\index.js":"13","E:\\material-django-react\\materialdjango\\frontend\\src\\Pages\\Profile\\ProfileDetails.js":"14","E:\\material-django-react\\materialdjango\\frontend\\src\\Pages\\Profile\\Profile.js":"15","E:\\material-django-react\\materialdjango\\frontend\\src\\Components\\Page\\Page.js":"16","E:\\material-django-react\\materialdjango\\frontend\\src\\Components\\Controls\\Tabs.js":"17","E:\\material-django-react\\materialdjango\\frontend\\src\\Pages\\Settings\\index.js":"18","E:\\material-django-react\\materialdjango\\frontend\\src\\Pages\\Settings\\Subscription.js":"19","E:\\material-django-react\\materialdjango\\frontend\\src\\Pages\\Settings\\Notifications.js":"20","E:\\material-django-react\\materialdjango\\frontend\\src\\Pages\\Settings\\Security.js":"21","E:\\material-django-react\\materialdjango\\frontend\\src\\Components\\Controls\\FormikField.js":"22","E:\\material-django-react\\materialdjango\\frontend\\src\\Components\\Controls\\FormikRadio.js":"23","E:\\material-django-react\\materialdjango\\frontend\\src\\Pages\\Auth\\Login.js":"24","E:\\material-django-react\\materialdjango\\frontend\\src\\Pages\\Auth\\ResetPassword.js":"25","E:\\material-django-react\\materialdjango\\frontend\\src\\Pages\\Auth\\ResetPasswordConfirm.js":"26","E:\\material-django-react\\materialdjango\\frontend\\src\\Pages\\Auth\\Activate.js":"27","E:\\material-django-react\\materialdjango\\frontend\\src\\Pages\\Auth\\Signup.js":"28","E:\\material-django-react\\materialdjango\\frontend\\src\\Actions\\auth.js":"29","E:\\material-django-react\\materialdjango\\frontend\\src\\Actions\\types.js":"30","E:\\material-django-react\\materialdjango\\frontend\\src\\store.js":"31","E:\\material-django-react\\materialdjango\\frontend\\src\\Reducers\\index.js":"32","E:\\material-django-react\\materialdjango\\frontend\\src\\Reducers\\auth.js":"33","E:\\material-django-react\\materialdjango\\frontend\\src\\Layouts\\Auth.js":"34","E:\\material-django-react\\materialdjango\\frontend\\src\\Components\\Socialauth\\Google.js":"35","E:\\material-django-react\\materialdjango\\frontend\\src\\Components\\Socialauth\\Facebook.js":"36","E:\\material-django-react\\materialdjango\\frontend\\src\\Pages\\Profile\\Help.js":"37","E:\\material-django-react\\materialdjango\\frontend\\src\\Pages\\Profile\\Report.js":"38","E:\\material-django-react\\materialdjango\\frontend\\src\\Pages\\Data\\Articles.js":"39","E:\\material-django-react\\materialdjango\\frontend\\src\\Pages\\Data\\Articleiteration.js":"40","E:\\material-django-react\\materialdjango\\frontend\\src\\Pages\\Data\\Articleform.js":"41","E:\\material-django-react\\materialdjango\\frontend\\src\\Pages\\Data\\useArticleSearch.js":"42","E:\\material-django-react\\materialdjango\\frontend\\src\\Pages\\Data\\Videos.js":"43","E:\\material-django-react\\materialdjango\\frontend\\src\\Pages\\Data\\useVideoSearch.js":"44","E:\\material-django-react\\materialdjango\\frontend\\src\\Pages\\Data\\Pricing.js":"45","E:\\material-django-react\\materialdjango\\frontend\\src\\Components\\Modal\\Dialogue.js":"46","E:\\material-django-react\\materialdjango\\frontend\\src\\Components\\Modal\\ModalPortal.js":"47","E:\\material-django-react\\materialdjango\\frontend\\src\\Pages\\Data\\Tools.js":"48","E:\\material-django-react\\materialdjango\\frontend\\src\\Pages\\Data\\useToolsSearch.js":"49","E:\\material-django-react\\materialdjango\\frontend\\src\\Pages\\Payments\\checkout.js":"50","E:\\material-django-react\\materialdjango\\frontend\\src\\Pages\\Payments\\checkoutform.js":"51","E:\\material-django-react\\materialdjango\\frontend\\src\\Components\\Controls\\ExtraNavMenu.js":"52"},{"size":445,"mtime":1608321327469,"results":"53","hashOfConfig":"54"},{"size":362,"mtime":1606918416887,"results":"55","hashOfConfig":"54"},{"size":3235,"mtime":1609958400477,"results":"56","hashOfConfig":"54"},{"size":10654,"mtime":1608217541165,"results":"57","hashOfConfig":"54"},{"size":588,"mtime":1608231671368,"results":"58","hashOfConfig":"54"},{"size":714,"mtime":1608066748566,"results":"59","hashOfConfig":"54"},{"size":314,"mtime":1608122012110,"results":"60","hashOfConfig":"54"},{"size":3947,"mtime":1608124339103,"results":"61","hashOfConfig":"54"},{"size":2448,"mtime":1608993898918,"results":"62","hashOfConfig":"54"},{"size":2271,"mtime":1608123419886,"results":"63","hashOfConfig":"54"},{"size":1628,"mtime":1609181773023,"results":"64","hashOfConfig":"54"},{"size":12377,"mtime":1610223818676,"results":"65","hashOfConfig":"54"},{"size":4243,"mtime":1610221427270,"results":"66","hashOfConfig":"54"},{"size":4725,"mtime":1610293445709,"results":"67","hashOfConfig":"54"},{"size":2084,"mtime":1609448846897,"results":"68","hashOfConfig":"54"},{"size":1138,"mtime":1610025835030,"results":"69","hashOfConfig":"54"},{"size":2621,"mtime":1608235528529,"results":"70","hashOfConfig":"54"},{"size":661,"mtime":1608383712938,"results":"71","hashOfConfig":"54"},{"size":2603,"mtime":1610221604034,"results":"72","hashOfConfig":"54"},{"size":4906,"mtime":1609485543371,"results":"73","hashOfConfig":"54"},{"size":2196,"mtime":1608807786818,"results":"74","hashOfConfig":"54"},{"size":924,"mtime":1608479695255,"results":"75","hashOfConfig":"54"},{"size":3419,"mtime":1608810252387,"results":"76","hashOfConfig":"54"},{"size":12077,"mtime":1610220333655,"results":"77","hashOfConfig":"54"},{"size":6574,"mtime":1609497078624,"results":"78","hashOfConfig":"54"},{"size":7550,"mtime":1609497088310,"results":"79","hashOfConfig":"54"},{"size":1178,"mtime":1609960796298,"results":"80","hashOfConfig":"54"},{"size":9615,"mtime":1610112707007,"results":"81","hashOfConfig":"54"},{"size":9445,"mtime":1610119606522,"results":"82","hashOfConfig":"54"},{"size":1370,"mtime":1609214976173,"results":"83","hashOfConfig":"54"},{"size":397,"mtime":1608491773652,"results":"84","hashOfConfig":"54"},{"size":121,"mtime":1608492890197,"results":"85","hashOfConfig":"54"},{"size":3336,"mtime":1610220084571,"results":"86","hashOfConfig":"54"},{"size":832,"mtime":1609282012580,"results":"87","hashOfConfig":"54"},{"size":1167,"mtime":1610114818914,"results":"88","hashOfConfig":"54"},{"size":1458,"mtime":1608823330080,"results":"89","hashOfConfig":"54"},{"size":2879,"mtime":1608976920426,"results":"90","hashOfConfig":"54"},{"size":5654,"mtime":1609484813576,"results":"91","hashOfConfig":"54"},{"size":13599,"mtime":1610288216679,"results":"92","hashOfConfig":"54"},{"size":6947,"mtime":1608903772490,"results":"93","hashOfConfig":"54"},{"size":1859,"mtime":1606306854894,"results":"94","hashOfConfig":"54"},{"size":1883,"mtime":1610288186032,"results":"95","hashOfConfig":"54"},{"size":14180,"mtime":1610304639117,"results":"96","hashOfConfig":"54"},{"size":1852,"mtime":1610288198734,"results":"97","hashOfConfig":"54"},{"size":3028,"mtime":1610185794161,"results":"98","hashOfConfig":"54"},{"size":2269,"mtime":1609172113735,"results":"99","hashOfConfig":"54"},{"size":1358,"mtime":1610045017338,"results":"100","hashOfConfig":"54"},{"size":13427,"mtime":1610288236496,"results":"101","hashOfConfig":"54"},{"size":1608,"mtime":1610288194957,"results":"102","hashOfConfig":"54"},{"size":1932,"mtime":1610292915903,"results":"103","hashOfConfig":"54"},{"size":4479,"mtime":1610288498557,"results":"104","hashOfConfig":"54"},{"size":2091,"mtime":1610223782520,"results":"105","hashOfConfig":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"504qda",{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"120"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"108"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"108"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"108"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"108"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"108"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"108"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"108"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"108"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"108"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"167"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"108"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"108"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"108"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"108"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"108"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"108"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"108"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"108"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"108"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"108"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"108"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"108"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"217"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"108"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"108"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"108"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"108"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"108"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"108"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\material-django-react\\materialdjango\\frontend\\src\\index.js",[],["246","247"],"E:\\material-django-react\\materialdjango\\frontend\\src\\reportWebVitals.js",[],"E:\\material-django-react\\materialdjango\\frontend\\src\\App\\App.js",[],"E:\\material-django-react\\materialdjango\\frontend\\src\\Pages\\LoginPage.js",["248","249","250","251","252"],"E:\\material-django-react\\materialdjango\\frontend\\src\\Pages\\SignupPage.js",[],"E:\\material-django-react\\materialdjango\\frontend\\src\\Components\\Sidebar\\Sidebar.js",["253"],"import React from 'react'\r\nimport styles from '../../assets/jss/Sidebar.js';\r\nimport { Grid ,Fade, Slide } from '@material-ui/core'\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\n\r\nconst Sidebar = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Slide in={true} direction='left' mountOnEnter unmountOnExit>\r\n        <div className={classes.sidemenu}>\r\n            <Grid container>\r\n                <Grid item>\r\n\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Divider />\r\n            im sidebar\r\n            \r\n        </div>\r\n        </Slide>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n",["254","255"],"E:\\material-django-react\\materialdjango\\frontend\\src\\assets\\jss\\Sidebar.js",[],"E:\\material-django-react\\materialdjango\\frontend\\src\\Components\\Navbar\\Navbar.js",["256","257","258"],"import React from 'react'\r\nimport { AppBar, Toolbar, Grid, InputBase, IconButton, Badge, Hidden, makeStyles } from '@material-ui/core'\r\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\r\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\r\nimport MenuOpenOutlinedIcon from '@material-ui/icons/MenuOpenOutlined';\r\nimport FormatIndentIncreaseOutlinedIcon from '@material-ui/icons/FormatIndentIncreaseOutlined';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport clsx from 'clsx';\r\nimport NavMenu from '../Controls/NavMenu'\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        backgroundColor: '#fff',\r\n\r\n    },\r\n    navshift: {\r\n        paddingLeft: '20%',\r\n        width: '100%'\r\n    },\r\n    navshrink: {\r\n        paddingLeft: '0',\r\n        width: '100%'\r\n\r\n    },\r\n    logobackgroundcolor: {\r\n        backgroundColor: theme.palette.primary.main,\r\n        paddingTop:'1.6%',\r\n        paddingRight:'1.4%',\r\n        paddingBottom:'1.6%',\r\n        paddingLeft:'2%',\r\n        marginLeft:'-2%'\r\n    },\r\n    avatar: {\r\n        width: '130px',\r\n        height: '100%',\r\n        borderRadius: '0px'\r\n    },\r\n\r\n    searchInput: {\r\n        opacity: '0.6',\r\n        padding: `0px ${theme.spacing(1)}px`,\r\n        fontSize: '0.8rem',\r\n        '&:hover': {\r\n            backgroundColor: '#f2f2f2'\r\n        },\r\n        '& .MuiSvgIcon-root': {\r\n            marginRight: theme.spacing(1)\r\n        }\r\n    }\r\n}))\r\n\r\nexport default function Navbar(props) {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    \r\n    const classes = useStyles();\r\n    const { handleSidebar, isopened } = props;\r\n\r\n    \r\n\r\n\r\n    return (\r\n        <AppBar position=\"static\"\r\n\r\n            className={classes.root}>\r\n            <Toolbar>\r\n                <Grid container\r\n                    alignItems=\"center\" >\r\n                    {/* className={clsx(classes.navshift,{[classes.navshrink]:!isopened})} */}\r\n\r\n                    <Grid  item sm={2} className={classes.logobackgroundcolor}>\r\n                        <Avatar alt=\"logo\" className={classes.avatar} src=\"https://app.kiranvoleti.com/static/assets/images/logo-white.png\" />\r\n\r\n                    </Grid>\r\n\r\n                    <Grid item sm={2} style={{paddingLeft:'100px'}}>\r\n                        <IconButton onClick={handleSidebar}>\r\n                            {isopened ?\r\n                                <MenuOpenOutlinedIcon fontSize=\"small\" />\r\n                                :\r\n                                <FormatIndentIncreaseOutlinedIcon fontSize=\"small\" />\r\n                            }\r\n\r\n                        </IconButton>\r\n                    </Grid>\r\n                    <Hidden smDown>\r\n                    <Grid item sm={6} xs={0}>\r\n                        <InputBase\r\n                            placeholder=\"Search topics\"\r\n                            className={classes.searchInput}\r\n                            startAdornment={<SearchIcon fontSize=\"small\" />}\r\n                        />\r\n\r\n                    </Grid>\r\n                    </Hidden>\r\n\r\n                    <Grid item sm={2} style={{display:'flex',justifyContent:'flex-end'}}>\r\n                        \r\n                        <IconButton>\r\n                            <Badge badgeContent={4} color=\"secondary\">\r\n                                <NotificationsNoneIcon fontSize=\"small\" />\r\n                            </Badge>\r\n                        </IconButton>\r\n                        <IconButton>\r\n                            <Badge badgeContent={3} color=\"primary\">\r\n                                <ChatBubbleOutlineIcon fontSize=\"small\" />\r\n                            </Badge>\r\n                        </IconButton>\r\n                        \r\n                        <NavMenu />\r\n                    </Grid>\r\n                </Grid>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}","E:\\material-django-react\\materialdjango\\frontend\\src\\Components\\Controls\\NavMenu.js",[],"E:\\material-django-react\\materialdjango\\frontend\\src\\Pages\\LoginPagedemo.js",["259","260"],"E:\\material-django-react\\materialdjango\\frontend\\src\\routes.js",["261"],"import SignupPage from './Pages/SignupPage';\r\nimport Profile from './Pages/Profile/index'\r\nimport SettingsPage from './Pages/Settings/index'\r\nimport Login from './Pages/Auth/Login'\r\nimport Articles from './Pages/Data/Articles';\r\nimport Videos from './Pages/Data/Videos';\r\nimport Pricing from './Pages/Data/Pricing';\r\nimport Tools from './Pages/Data/Tools';\r\n\r\n// import Icons from \"views/examples/Icons.js\";\r\n\r\nvar routes = [\r\n  {\r\n    path: \"/\",\r\n    title: \"Home\",\r\n    icon: \"ni ni-tv-2 text-primary\",\r\n    component: Profile,\r\n    layout: \"/admin\",\r\n    \r\n  },\r\n  {\r\n    path: \"/profile\",\r\n    title: \"Profile\",\r\n    icon: \"ni ni-tv-2 text-primary\",\r\n    component: Profile,\r\n    layout: \"/admin\",\r\n    \r\n  },\r\n  {\r\n    path: \"/settings\",\r\n    title: \"Settings\",\r\n    icon: \"ni ni-tv-2 text-primary\",\r\n    component: SettingsPage,\r\n    layout: \"/admin\"\r\n    \r\n  },\r\n  {\r\n    path: \"/login\",\r\n    name: \"Login\",\r\n    icon: \"ni ni-tv-2 text-primary\",\r\n    component: Login,\r\n    layout: \"/admin\"\r\n    \r\n  },\r\n  {\r\n    path: \"/signup\",\r\n    name: \"Signup\",\r\n    icon: \"ni ni-tv-2 text-primary\",\r\n    component: SignupPage,\r\n    layout: \"/admin\"\r\n    \r\n  },\r\n  {\r\n    path: \"/articles\",\r\n    name: \"Articles\",\r\n    icon: \"ni ni-tv-2 text-primary\",\r\n    component: Articles,\r\n    layout: \"/admin\"\r\n    \r\n  },\r\n  {\r\n    path: \"/videos\",\r\n    name: \"Videos\",\r\n    icon: \"ni ni-tv-2 text-primary\",\r\n    component: Videos,\r\n    layout: \"/admin\"\r\n    \r\n  },\r\n  {\r\n    path: \"/tools\",\r\n    name: \"Tools\",\r\n    icon: \"ni ni-tv-2 text-primary\",\r\n    component: Tools,\r\n    layout: \"/admin\"\r\n    \r\n  }\r\n  \r\n \r\n];\r\nexport default routes;\r\n","E:\\material-django-react\\materialdjango\\frontend\\src\\Layouts\\Admin.js",["262","263","264","265","266","267","268"],"import React, { useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport {\r\n    AppBar, Container, Toolbar, Grid,\r\n    IconButton, Badge, makeStyles, Hidden,\r\n    Card, CardContent, Paper, Box, Link, Menu, MenuItem\r\n} from '@material-ui/core'\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport FileCopyOutlinedIcon from '@material-ui/icons/FileCopyOutlined';\r\nimport HomeOutlinedIcon from '@material-ui/icons/HomeOutlined';\r\nimport VideoLibraryOutlinedIcon from '@material-ui/icons/VideoLibraryOutlined';\r\nimport BuildOutlinedIcon from '@material-ui/icons/BuildOutlined';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport NavMenu from '../Components/Controls/NavMenu'\r\nimport { Route, Switch, Redirect, useLocation, NavLink } from \"react-router-dom\";\r\nimport routes from \"../routes.js\";\r\nimport Page from \"../Components/Page/Page\"\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../Actions/auth';\r\n// import ExtraNavMenu from '../Components/Controls/ExtraNavMenu';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',    \r\n        boxSizing:'border-box',\r\n        margin:'0',\r\n        padding:'0' \r\n        \r\n        \r\n\r\n    },\r\n    textdecor:{\r\n        textDecoration:'none',\r\n        color:'inherit'        \r\n    },\r\n\r\n    avatar: {\r\n        width: '80%',\r\n        height: '40px',\r\n        borderRadius: '0px',\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        backgroundColor: '#fff',\r\n        color: '#000',\r\n        [theme.breakpoints.down('xs')]: {\r\n            backgroundColor: theme.palette.primary.main,\r\n            color: '#fff'\r\n        },\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 37,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n    },\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: theme.spacing(7) + 1,\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9) + 1,\r\n        },\r\n        [theme.breakpoints.down('sm')]: {\r\n            width: 0,\r\n            display: 'none'\r\n        }\r\n    },\r\n    toolbar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar\r\n    },\r\n    maincontent: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3,1),\r\n        backgroundColor:'#f1f4f5',\r\n        [theme.breakpoints.down('sm')]: {\r\n            padding: theme.spacing(6, 0),\r\n\r\n        }\r\n    },\r\n    activeclass: {\r\n        backgroundColor:'red',\r\n        color:'blue',\r\n        '& .MuiListItem-button':{\r\n            backgroundColor:'#EEEEEE',\r\n        }\r\n    }\r\n}));\r\n\r\nconst getRoutes = routes => {\r\n    return routes.map((prop, key) => {\r\n        if (prop.layout === \"/admin\") {\r\n            return (\r\n                <Route\r\n                    exact\r\n                    path={prop.path}\r\n                    component={prop.component}\r\n                    key={key}\r\n                />\r\n            );\r\n        } else {\r\n            return null;\r\n        }\r\n    });\r\n};\r\n\r\nfunction Admin({logout,isAuthenticated}) {\r\n\r\n    const location = useLocation();\r\n    \r\n    \r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(true);\r\n    const [mobiledrop, setMobiledrop] = React.useState(false);\r\n    \r\n    \r\n    if (!isAuthenticated) {\r\n        return <Redirect to=\"/login\" />\r\n    }\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n                <Toolbar>\r\n                    <Grid container alignItems=\"center\">\r\n                        <Grid item sm={2} xs={3}>\r\n                            <Typography variant=\"h6\" noWrap>\r\n                                <IconButton\r\n                                    color=\"inherit\"\r\n                                    aria-label=\"open drawer\"\r\n                                    onClick={handleDrawerOpen}\r\n                                    edge=\"start\"\r\n                                    className={clsx(classes.menuButton, {\r\n                                        [classes.hide]: open,\r\n                                    })}\r\n                                >\r\n                                    <MenuIcon />\r\n                                </IconButton>\r\n                            </Typography>\r\n\r\n                        </Grid>\r\n\r\n                        <Hidden xsDown>\r\n                            <Grid item sm style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n\r\n\r\n                             \r\n                                \r\n                                \r\n                                \r\n                               \r\n                                \r\n                                {/*\r\n                                <IconButton>\r\n                                    <Badge badgeContent={3} color=\"primary\">\r\n                                        <ChatBubbleOutlineIcon fontSize=\"small\" />\r\n                                    </Badge>\r\n                                </IconButton> */}\r\n                                <Box mt={1}>\r\n                                {localStorage.getItem('first_name')}({localStorage.getItem('usertype')})\r\n                                </Box>\r\n                                <NavMenu logout={logout} />\r\n                                \r\n\r\n\r\n\r\n\r\n                            </Grid>\r\n                        </Hidden>\r\n\r\n                        <Hidden smUp>\r\n\r\n                            <Grid item xs={8} style={{ display: 'flex', justifyContent: 'flex-start' }}>\r\n\r\n                                {!open ? <Avatar style={{ width: '160px', height: 'auto', borderRadius: '0px' }} alt=\"logo\" src=\"https://app.kiranvoleti.com/static/assets/images/logo-white.png\" /> : null}\r\n\r\n                            </Grid>\r\n                            <Grid item xs={1}>\r\n                                <MoreVertIcon fontSize=\"small\" onClick={() => setMobiledrop(!mobiledrop)} />\r\n\r\n\r\n                            </Grid>\r\n\r\n\r\n\r\n\r\n                        </Hidden>\r\n\r\n                    </Grid>\r\n\r\n\r\n\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                variant=\"permanent\"\r\n                className={clsx(classes.drawer, {\r\n                    [classes.drawerOpen]: open,\r\n                    [classes.drawerClose]: !open,\r\n                })}\r\n                classes={{\r\n                    paper: clsx({\r\n                        [classes.drawerOpen]: open,\r\n                        [classes.drawerClose]: !open,\r\n                    }),\r\n                }}\r\n            >\r\n                <div className={classes.toolbar} style={{ backgroundColor: '#3f51b5' }}>\r\n                    <Avatar alt=\"logo\" className={classes.avatar} src=\"https://app.kiranvoleti.com/static/assets/images/logo-white.png\" />\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon style={{ color: '#fff' }} />}\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n\r\n                <List>\r\n                    {(localStorage.getItem('usertype')===\"Admin\" || localStorage.getItem('usertype')===\"Staff\") ?\r\n                    <Link href=\"/ui/admin/\" activeClassName={classes.activeclass} className={classes.textdecor}>\r\n                    <ListItem button>\r\n                        <ListItemIcon><HomeOutlinedIcon fontSize='small' /></ListItemIcon>\r\n                        <ListItemText primary='Dashboard' />\r\n                    </ListItem>\r\n                    </Link>:null\r\n}\r\n                    <NavLink to=\"/articles\" activeClassName={classes.activeclass} className={classes.textdecor}>\r\n                    <ListItem button>                        \r\n                        <ListItemIcon><FileCopyOutlinedIcon fontSize='small' /></ListItemIcon>\r\n                        <ListItemText primary='Articles' />\r\n                    </ListItem>\r\n                    </NavLink>\r\n\r\n                    <NavLink to=\"/videos\" activeClassName={classes.activeclass} className={classes.textdecor}>\r\n                    <ListItem button>                        \r\n                        <ListItemIcon><VideoLibraryOutlinedIcon fontSize='small' /></ListItemIcon>\r\n                        <ListItemText primary='Videos' />\r\n                    </ListItem>\r\n                    </NavLink>\r\n                    <NavLink to=\"/tools\" activeClassName={classes.activeclass} className={classes.textdecor}>\r\n                    <ListItem button>\r\n                        <ListItemIcon><BuildOutlinedIcon fontSize='small' /></ListItemIcon>\r\n                        <ListItemText primary='Tools' />\r\n                    </ListItem>\r\n                    </NavLink>\r\n\r\n\r\n                </List>\r\n            </Drawer>\r\n\r\n\r\n\r\n\r\n            <main className={classes.maincontent}>\r\n\r\n                {mobiledrop ?\r\n                    <Slide direction=\"down\" in={true} mountOnEnter unmountOnExit><div style={{ width: '100%', height: '60px', position: 'fixed', marginTop: '8px', marginRight: '0px', backgroundColor: '#fff', display: 'flex', justifyContent: 'flex-end', alignItems: 'center', padding: '0px 30px',zIndex:'4' }}><span>{localStorage.getItem('first_name')}({localStorage.getItem('usertype')})</span><NavMenu logout={logout} /></div></Slide>\r\n                    : null}\r\n                <div className={classes.toolbar} />\r\n                <Page\r\n                    className='justemp'\r\n                    title='KiranVoleti | Digitalbox'\r\n                    breadcomb={location.pathname}\r\n                >\r\n                    <Container maxWidth=\"lg\">\r\n                        <Grid\r\n                            container\r\n                            spacing={2}\r\n                        >\r\n\r\n                            <Switch>\r\n                                {getRoutes(routes)}\r\n                            </Switch>\r\n\r\n                        </Grid>\r\n                    </Container>\r\n                </Page>\r\n\r\n\r\n\r\n\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Admin);","E:\\material-django-react\\materialdjango\\frontend\\src\\Pages\\Profile\\index.js",["269","270","271","272"],"import React from 'react'\r\nimport { Grid, useScrollTrigger } from '@material-ui/core'\r\nimport Profile from './Profile'\r\nimport ProfileDetails from './ProfileDetails'\r\nimport Help from './Help'\r\nimport Report from './Report'\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport axios from 'axios'\r\nimport Moment from 'react-moment';\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nconst ProfileIndex = () => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [snakreq,setSnakreq] = React.useState({\r\n    message:\"\",\r\n    color:\"inherit\"\r\n\r\n  });\r\n\r\n  const [user,setUser] = React.useState({\r\n    avatar: '/static/images/avatars/avatar_6.png',\r\n    first_name:\"\",\r\n    last_name:\"\",\r\n    email:\"\",\r\n    joined:\"\",\r\n    usertype:\"\",\r\n    phone:\"\",\r\n    id:'',\r\n    tier:''\r\n\r\n  });\r\n  \r\n  \r\n\r\n\r\n\r\n  React.useEffect(() => {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n        'Accept': 'application/json'\r\n      }\r\n  };\r\n    \r\n    const body = {\r\n      params:{\r\n        id:1\r\n      }\r\n    }\r\n    \r\n    axios.get(`https://app.kiranvoleti.com/testing/checkfun/`,config)\r\n    .then(res => {\r\n      \r\n      // setProfilename(res.data.response.first_name)\r\n      \r\n      \r\n     (res.data.response.map((val) => {\r\n        setUser({\r\n          ...user,\r\n            first_name:val.first_name,\r\n            last_name: val.last_name,\r\n            email: val.email,\r\n            id:val.id,\r\n            tier:val.tier,\r\n            phone:val.phone,\r\n            joined:<Moment format=\"D MMM YYYY\" withTitle>{val.joined}</Moment>,\r\n            usertype: val.is_staff ? (val.is_superuser ? 'Admin': 'Staff') : 'Subscriber'\r\n\r\n        })\r\n        localStorage.setItem('first_name',val.first_name)\r\n        localStorage.setItem('last_name',val.last_name)\r\n        localStorage.setItem('phone',val.phone)\r\n        localStorage.setItem('email',val.email)\r\n        localStorage.setItem('usertype',val.is_staff ? (val.is_superuser ? 'Admin': 'Staff') : 'Subscriber')\r\n        localStorage.setItem('userid',val.id)\r\n        localStorage.setItem('tier',val.tier)\r\n        \r\n      }\r\n     \r\n     \r\n      \r\n        \r\n        \r\n        ))\r\n\r\n        localStorage.setItem('remain',res.data.remain)\r\n        localStorage.setItem('expiryon',res.data.totaldays)\r\n\r\n\r\n      \r\n    })\r\n\r\n    // setProfile(userprofileresp)\r\n    \r\n    \r\n  }, [])\r\n  //    Snackbar\r\n\r\n    \r\n    \r\n  const handleClose = (event,reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n// Snackbar\r\n\r\n\r\n  \r\n    return (\r\n        <>\r\n         <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity={snakreq.color}>\r\n                    {snakreq.message}\r\n                </Alert>\r\n            </Snackbar>\r\n        \r\n            <Grid\r\n            item\r\n            lg={4}\r\n            md={6}\r\n            xs={12}\r\n          >\r\n            <Profile\r\n            user= {user}\r\n            snakreq = {snakreq}\r\n            setsnakreq = {setSnakreq}  \r\n            open={setOpen}\r\n            className='profileclass'\r\n            />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={8}\r\n            md={6}\r\n            xs={12}\r\n          >\r\n            <ProfileDetails user= {user} snakreq = {snakreq}\r\n            setsnakreq = {setSnakreq}  \r\n            open={setOpen}\r\n            className='profiledetailsclass' />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={6}\r\n            md={6}\r\n            xs={12}\r\n          >\r\n            <Report\r\n              snakreq = {snakreq}\r\n              setsnakreq = {setSnakreq}  \r\n              open={setOpen}          \r\n            />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={6}\r\n            md={6}\r\n            xs={12}\r\n          >\r\n            <Help\r\n            snakreq = {snakreq}\r\n            setsnakreq = {setSnakreq}  \r\n            open={setOpen}   \r\n            />\r\n          </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProfileIndex;\r\n","E:\\material-django-react\\materialdjango\\frontend\\src\\Pages\\Profile\\ProfileDetails.js",["273","274","275"],"import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Grid,\r\n  TextField,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport axios from 'axios';\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst ProfileDetails = ({ className,user,setsnakreq,snakreq,open, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [values, setValues] = React.useState({\r\n    first_name:\"\",\r\n    last_name:\"\",\r\n    phone:\"\",\r\n    email:''\r\n  });\r\n \r\n  React.useEffect(() => {\r\n    setValues({\r\n      ...values,\r\n      first_name:user.first_name,\r\n      last_name:user.last_name,\r\n      phone: user.phone,\r\n      email:user.email\r\n    });\r\n    \r\n  }, [user])\r\n  \r\n  \r\n  const handleChange = (event) => {\r\n    \r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  const handleOnClick = (event) => {\r\n    const config = {\r\n      headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n          'Accept': 'application/json'\r\n      }\r\n  };\r\n    \r\n    const body = new FormData();\r\n    body.append('id',localStorage.getItem('userid'));\r\n    body.append('first_name',values.first_name);\r\n    body.append('last_name',values.last_name);\r\n    body.append('phone',values.phone);\r\n    body.append('email',values.email);\r\n    \r\n    axios.post(`https://app.kiranvoleti.com/testing/checkfun/`,body, config)\r\n    .then(res => {    \r\n     \r\n\r\n      \r\n      if(res.data.response ===\"success\"){\r\n        setsnakreq({...snakreq,\r\n          message:\"Successfully Updated !!\",\r\n          color:\"success\"});\r\n\r\n      }else{\r\n        setsnakreq({...snakreq,\r\n          message:\"Something Went Wrong !!\",\r\n          color:\"error\"});          \r\n\r\n      }\r\n      \r\n        open(true)\r\n\r\n      \r\n    })\r\n    .catch(e => {\r\n      setsnakreq({...snakreq,\r\n        message:\"Something Went Wrong !!\",\r\n        color:\"error\"});\r\n        open(true)\r\n\r\n    })\r\n  }\r\n\r\n  \r\n\r\n  return (\r\n    <form\r\n      autoComplete=\"off\"\r\n      noValidate\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n          subheader=\"The information can be edited\"\r\n          title=\"Profile\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                helperText=\"Please specify the first name\"\r\n                label=\"First name\"\r\n                name=\"first_name\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.first_name}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Last name\"\r\n                name=\"last_name\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.last_name}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            \r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Phone Number\"\r\n                name=\"phone\"\r\n                onChange={handleChange}\r\n                type=\"number\"\r\n                value={values.phone}\r\n                variant=\"outlined\"\r\n              />\r\n             \r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n            <TextField\r\n                fullWidth\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                onChange={handleChange}\r\n                type=\"email\"\r\n                value={values.email}\r\n                variant=\"outlined\"\r\n              />\r\n              </Grid>\r\n           \r\n           \r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"flex-end\"\r\n          p={2}\r\n        >\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={handleOnClick}\r\n          >\r\n            Save details\r\n          </Button>\r\n        </Box>\r\n      </Card>\r\n    </form>\r\n  );\r\n};\r\n\r\n// ProfileDetails.propTypes = {\r\n//   className: PropTypes.string\r\n// };\r\n\r\nexport default ProfileDetails;\r\n","E:\\material-django-react\\materialdjango\\frontend\\src\\Pages\\Profile\\Profile.js",["276","277","278","279"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Divider,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    minHeight:'348px',\r\n    maxHeight:'349px'\r\n  },\r\n  avatar: {\r\n    height: 100,\r\n    width: 100\r\n  }\r\n}));\r\n\r\nconst Profile = ({ className,user, ...rest }) => {\r\n  \r\n  \r\n  const classes = useStyles();\r\n  \r\n\r\n  \r\n\r\n\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardContent>\r\n        <Box\r\n          alignItems=\"center\"\r\n          display=\"flex\"\r\n          flexDirection=\"column\"\r\n        >\r\n          <Avatar\r\n            className={classes.avatar}\r\n            src={user.avatar}\r\n          />\r\n          <Typography\r\n            color=\"textPrimary\"\r\n            gutterBottom\r\n            variant=\"body1\"\r\n          >\r\n            {user.first_name}\r\n          </Typography>\r\n          <Typography\r\n            color=\"textPrimary\"\r\n            gutterBottom\r\n            variant=\"body2\"\r\n          >\r\n            {user.email}\r\n          </Typography>\r\n          \r\n        </Box>\r\n      </CardContent>\r\n      <Divider />\r\n      \r\n      <Typography\r\n            color=\"textPrimary\"\r\n            align=\"center\"\r\n            gutterBottom\r\n            variant=\"body2\"\r\n          >\r\n            Joined On:  {user.joined}\r\n          </Typography>\r\n          <Typography\r\n            color=\"textPrimary\"\r\n            align=\"center\"\r\n            gutterBottom\r\n            variant=\"body2\"\r\n          >\r\n            Role :  {user.usertype}\r\n          </Typography>\r\n      {/* <CardActions>\r\n        <Button\r\n          color=\"primary\"\r\n          fullWidth\r\n          variant=\"text\"\r\n        >\r\n          Upload picture\r\n        </Button>\r\n      </CardActions> */}\r\n    </Card>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\n\r\nexport default Profile;\r\n","E:\\material-django-react\\materialdjango\\frontend\\src\\Components\\Page\\Page.js",[],"E:\\material-django-react\\materialdjango\\frontend\\src\\Components\\Controls\\Tabs.js",[],["280","281"],"E:\\material-django-react\\materialdjango\\frontend\\src\\Pages\\Settings\\index.js",[],"E:\\material-django-react\\materialdjango\\frontend\\src\\Pages\\Settings\\Subscription.js",["282","283","284","285"],"import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Divider,\r\n  Typography,\r\n  CardHeader,\r\n  Paper,\r\n  Grid,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Moment from 'react-moment';\r\nconst useStyles = makeStyles(() => ({\r\n    root: {},\r\n    avatar: {\r\n      height: 100,\r\n      width: 100\r\n    },\r\n    iconclass:{\r\n        backgroundColor:'#6573c3',\r\n        color:'#fff',\r\n        padding:'5px 10px',\r\n        borderRadius:'5px'\r\n    }\r\n  }));\r\n\r\nconst Subscription = ({ className, ...rest }) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <>\r\n        <Card\r\n            className={clsx(classes.root, className)}\r\n        {...rest}\r\n      >\r\n          <CardHeader\r\n          subheader=\"Manage Your Subscription\"\r\n          title=\"Subscription\"\r\n            />\r\n            <Divider />\r\n            <CardContent>\r\n            <Paper elevation={0}>\r\n            <Box color=\"text.secondary\" display=\"flex\" justifyContent=\"space-between\">\r\n                <Box>\r\n                <Typography \r\n                    color=\"textSecondary\"\r\n                    gutterBottom\r\n                    variant=\"h6\">\r\n                Current Plan: Tier {localStorage.getItem('tier')}\r\n               \r\n                </Typography>\r\n                <Typography \r\n                    color=\"textSecondary\"\r\n                    gutterBottom\r\n                    variant=\"body2\">\r\n                Expires on :  {localStorage.getItem('expiryon')}\r\n                &nbsp;(<Moment  fromNow>{localStorage.getItem('expiryon')}</Moment>)\r\n               \r\n                </Typography>\r\n                \r\n                </Box>\r\n                <Box>\r\n                <Typography \r\n                    // color=\"textSecondary\"\r\n                    className={classes.iconclass}\r\n                    gutterBottom\r\n                    variant=\"h5\">\r\n                        <GroupIcon fontSize=\"small\" />\r\n                </Typography>\r\n                </Box>\r\n                \r\n\r\n            </Box>\r\n\r\n            </Paper>\r\n\r\n            </CardContent>\r\n       \r\n            \r\n\r\n          </Card>\r\n          <Box display=\"flex\" mt={3} justifyContent=\"flex-end\">\r\n            <NavLink to=\"/pricing\">\r\n          <Button variant=\"contained\" color=\"primary\">\r\n            Upgrade\r\n          </Button>\r\n          </NavLink>\r\n          </Box>\r\n      </>\r\n    )\r\n}\r\n\r\nexport default Subscription\r\n","E:\\material-django-react\\materialdjango\\frontend\\src\\Pages\\Settings\\Notifications.js",["286","287","288","289","290","291"],"import React from 'react'\r\nimport {\r\n    Avatar,\r\n    Box,\r\n    Button,\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    Divider,\r\n    Typography,\r\n    CardHeader,\r\n    Paper,\r\n    Grid,\r\n    makeStyles\r\n} from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport FormikField from \"../../Components/Controls/FormikField\";\r\nimport FormikRadio from \"../../Components/Controls/FormikRadio\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {},\r\n    avatar: {\r\n        height: 100,\r\n        width: 100\r\n    },\r\n    iconclass: {\r\n        backgroundColor: '#6573c3',\r\n        color: '#fff',\r\n        padding: '5px 10px',\r\n        borderRadius: '5px'\r\n    }\r\n}));\r\n\r\nconst notificationschema = Yup.object().shape({\r\n    email: Yup.string()\r\n        .min(2, 'Too Short!')\r\n        .required(\"Email is Should not be Empty\"),\r\n    lettersub: Yup.string()\r\n    .required(\"A Subscribe option is required\")\r\n})\r\nconst initialValues = {\r\n    email: localStorage.getItem('email'),\r\n    lettersub:\"\",\r\n};\r\n\r\n\r\nconst Notifications = ({ className, ...rest }) => {\r\n    const classes = useStyles();\r\n    const handleSubmit = (values) => {\r\n        alert(JSON.stringify(values));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Card\r\n                className={clsx(classes.root, className)}\r\n                {...rest}\r\n            >\r\n                <CardHeader\r\n                    subheader=\"NewsLetter Subscription\"\r\n                    title=\"Daily News Letter\"\r\n                />\r\n                <Divider />\r\n                <CardContent>\r\n                    <Paper elevation={0}>\r\n\r\n                        <Grid container spacing={3}>\r\n\r\n                            <Formik\r\n                                initialValues={initialValues}\r\n                                onSubmit={handleSubmit}\r\n                                validationSchema={notificationschema}\r\n                            >\r\n\r\n                                {({ dirty, isValid }) => {\r\n                                    return (\r\n                                        <Grid item xs={12}>\r\n                                            \r\n                                            <Form>\r\n\r\n                                            \r\n                                                <FormikField\r\n                                                    textvariant=\"outlined\"\r\n                                                    name=\"email\"\r\n                                                    label=\"Email\"\r\n                                                    required\r\n                                                />\r\n                                            \r\n\r\n                                            \r\n                                            <br />\r\n\r\n                                                \r\n                                                    <FormikRadio\r\n                                                    name=\"lettersub\"\r\n                                                    label=\"Lettersub\"\r\n                                                    val=\"subscribe\"\r\n                                                    required\r\n                                                    />\r\n                                                     <FormikRadio\r\n                                                    name=\"lettersub\"\r\n                                                    label=\"Lettersub\"\r\n                                                    val=\"unsubscribe\"\r\n                                                    required\r\n                                                    />\r\n                                                \r\n\r\n                                                \r\n                                                    <Button\r\n                                                        variant=\"contained\"\r\n                                                        color=\"primary\"\r\n                                                        disabled={!dirty || !isValid}\r\n                                                        type=\"submit\"\r\n\r\n                                                    >\r\n                                                        Submit\r\n                                                    </Button>\r\n                                                \r\n\r\n                                            </Form>\r\n                                        </Grid>\r\n\r\n                                    );\r\n                                }}\r\n                            </Formik>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                        </Grid>\r\n                    </Paper>\r\n\r\n                </CardContent>\r\n\r\n\r\n\r\n            </Card>\r\n\r\n        </>\r\n    )\r\n}\r\nNotifications.propTypes = {\r\n    className: PropTypes.string\r\n}\r\nexport default Notifications\r\n","E:\\material-django-react\\materialdjango\\frontend\\src\\Pages\\Settings\\Security.js",["292","293","294","295","296","297","298","299","300","301","302","303","304"],"import React from 'react'\r\nimport {\r\n    Avatar,\r\n    Box,\r\n    Button,\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    Divider,\r\n    Typography,\r\n    CardHeader,\r\n    Paper,\r\n    Grid,\r\n    makeStyles\r\n} from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport FormikField from \"../../Components/Controls/FormikField\";\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {},\r\n    avatar: {\r\n        height: 100,\r\n        width: 100\r\n    },\r\n    iconclass: {\r\n        backgroundColor: '#6573c3',\r\n        color: '#fff',\r\n        padding: '5px 10px',\r\n        borderRadius: '5px'\r\n    }\r\n}));\r\n\r\nconst notificationschema = Yup.object().shape({\r\n    email: Yup.string()\r\n    .min(2, 'Too Short!')\r\n    .required(\"Email is Should not be Empty\"),    \r\n})\r\nconst initialValues = {\r\n    email: \"\"\r\n  };\r\n\r\n\r\nconst Security = ({ className, ...rest }) => {\r\n    const classes = useStyles();\r\n    const handleSubmit = (values) => {\r\n        alert(JSON.stringify(values));\r\n      };\r\n\r\n    return (\r\n        <>\r\n            <Card\r\n                className={clsx(classes.root, className)}\r\n                {...rest}\r\n            >\r\n                <CardHeader\r\n                    subheader=\"Change Password\"\r\n                    title=\"Security\"\r\n                /> \r\n                <Divider />\r\n                <CardContent>\r\n                    <Paper elevation={0}>\r\n                        \r\n                            <Grid container spacing={3}>\r\n                                <Grid item xs={12} sm={4} md={4}>\r\n\r\n                                <NavLink to=\"/reset-password\">Reset Password</NavLink>\r\n                                                     \r\n                                </Grid>\r\n                                                          \r\n\r\n                                </Grid>   \r\n                    </Paper>\r\n\r\n                </CardContent>\r\n\r\n\r\n\r\n            </Card>\r\n           \r\n        </>\r\n    )\r\n}\r\nSecurity.propTypes = {\r\n    className: PropTypes.string\r\n  }\r\nexport default Security\r\n","E:\\material-django-react\\materialdjango\\frontend\\src\\Components\\Controls\\FormikField.js",["305"],"import React from 'react'\r\nimport { ErrorMessage, Field } from \"formik\";\r\nimport TextField from '@material-ui/core/TextField'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FormikField = ({ name, label, type = \"text\", required = false, textvariant=false}) => {\r\n    return (\r\n        <div className=\"FormikField\">\r\n            <Field\r\n                variant={textvariant ? textvariant:null}\r\n                required={required}\r\n                autoComplete=\"off\"\r\n                as={TextField}\r\n                label={label}\r\n                name={name}\r\n                fullWidth\r\n                type={type}\r\n                helperText={<ErrorMessage name={name} />}\r\n            />         \r\n        </div>\r\n    )\r\n}\r\n\r\n// FormikField.propTypes =  {\r\n//     name: PropTypes.string,\r\n//     label: PropTypes.string,\r\n//     type: PropTypes.string,\r\n//     required: PropTypes.bool,\r\n//   }\r\nexport default FormikField;\r\n","E:\\material-django-react\\materialdjango\\frontend\\src\\Components\\Controls\\FormikRadio.js",["306","307","308","309"],"import React, { ReactNode } from \"react\";\r\nimport { Field, ErrorMessage, FieldInputProps } from \"formik\";\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport clsx from 'clsx';\r\nimport {Divider, makeStyles} from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      '&:hover': {\r\n        backgroundColor: 'transparent',\r\n      },\r\n    },\r\n    icon: {\r\n      borderRadius: '50%',\r\n      width: 16,\r\n      height: 16,\r\n      boxShadow: 'inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)',\r\n      backgroundColor: '#f5f8fa',\r\n      backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))',\r\n      '$root.Mui-focusVisible &': {\r\n        outline: '2px auto rgba(19,124,189,.6)',\r\n        outlineOffset: 2,\r\n      },\r\n      'input:hover ~ &': {\r\n        backgroundColor: '#ebf1f5',\r\n      },\r\n      'input:disabled ~ &': {\r\n        boxShadow: 'none',\r\n        background: 'rgba(206,217,224,.5)',\r\n      },\r\n    },\r\n    checkedIcon: {\r\n      backgroundColor: '#137cbd',\r\n      backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))',\r\n      '&:before': {\r\n        display: 'block',\r\n        width: 16,\r\n        height: 16,\r\n        backgroundImage: 'radial-gradient(#fff,#fff 28%,transparent 32%)',\r\n        content: '\"\"',\r\n      },\r\n      'input:hover ~ &': {\r\n        backgroundColor: '#106ba3',\r\n      },\r\n    },\r\n  });\r\n  \r\n  // Inspired by blueprintjs\r\n  function StyledRadio(props) {\r\n    const classes = useStyles();\r\n  \r\n    return (\r\n      <Radio\r\n        className={classes.root}\r\n        disableRipple\r\n        color=\"default\"\r\n        checkedIcon={<span className={clsx(classes.icon, classes.checkedIcon)} />}\r\n        icon={<span className={classes.icon} />}\r\n        {...props}\r\n      />\r\n    );\r\n  }\r\n  \r\n  \r\n\r\n  const MaterialUIRadioField = ({\r\n    errorString,\r\n    label,\r\n    children,\r\n    value,\r\n    name,\r\n    onChange,\r\n    onBlur,\r\n    required\r\n}) => {\r\n    return (\r\n        <FormControl component=\"fieldset\">\r\n        {/* <FormLabel component=\"legend\">Select Subs</FormLabel> */}\r\n        <RadioGroup defaultValue=\"subscribed\" aria-label=\"Lettersub\"\r\n        name={name} onChange={onChange} onBlur={onBlur}\r\n        value={value}\r\n        >\r\n            {children}\r\n        </RadioGroup>\r\n      </FormControl>\r\n    );\r\n};\r\n\r\n  const FormikRadio = ({name,label,val,required}) => {\r\n      return (\r\n            <div className=\"FormikSelect\">\r\n                <Field\r\n                name={name}\r\n                as={MaterialUIRadioField}\r\n                label={label}\r\n                errorString={<ErrorMessage name={name} />}\r\n                required={required}\r\n                >\r\n                    <FormControlLabel value={val} control={<StyledRadio />} label={val} />\r\n                    {/* <FormControlLabel value=\"unsubscribe\" control={<StyledRadio />} label=\"Unsubscribe\" />       */}\r\n\r\n                </Field>\r\n\r\n\r\n                {/* <FormControl component=\"fieldset\">\r\n                    <FormLabel component=\"legend\">Select Subs</FormLabel>\r\n                </FormControl> */}\r\n\r\n\r\n            </div>\r\n      );\r\n  }\r\n\r\n\r\n  \r\n  export default FormikRadio\r\n  ",["310","311"],"E:\\material-django-react\\materialdjango\\frontend\\src\\Pages\\Auth\\Login.js",["312","313","314","315","316"],"import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport { Link as RouterLink, Redirect} from 'react-router-dom'; \r\nimport {connect} from 'react-redux';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport FormikField from \"../../Components/Controls/FormikField\";\r\n\r\nimport { login } from \"../../Actions/auth\";\r\n\r\nimport GoogleButton from 'react-google-button'\r\n\r\nimport axios from 'axios';\r\nimport { IconButton } from '@material-ui/core';\r\n\r\n\r\nfunction Copyright() {\r\n\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            {' '}\r\n            {new Date().getFullYear()}\r\n            {'. '}All Rights Reserved.\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100vh',\r\n    },\r\n    image: {\r\n        backgroundImage: 'url(https://app.kiranvoleti.com/static/assets/images/login3.jpeg)',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor:\r\n            theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'right center',\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(8, 4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    facebookbutton:{\r\n        position:'relative',\r\n        borderRadius:'1px',\r\n        width:'auto',\r\n        backgroundColor: '#3B5998',\r\n        color: 'white',\r\n        height:\"50px\",\r\n        fontSize:'16px',\r\n        paddingTop:'3%',\r\n        textAlign:'center', \r\n        cursor:'pointer',\r\n        margin: '3px 0',\r\n        boxShadow: 'rgba(0, 0, 0, 0.25) 0px 2px 4px 0',\r\n        '& .dropcap':{\r\n            content:'',\r\n            position:'absolute',            \r\n            left:0,\r\n            top:0,\r\n            backgroundColor:'#fff',\r\n            color:\"#3B5998\",\r\n            // padding:\"5% 5% 7% 5%\",\r\n            margin:\"1px\",\r\n            fontSize:'24px',\r\n            width:'49px',\r\n            height: '48px',\r\n            alignItems:'center',\r\n            justifyContent:'center',          \r\n\r\n            fontWeight:\"bold\",\r\n            fontStyle:\"italic\",\r\n            \r\n            // float:'left',\r\n            // marginTop:'-9px'\r\n            \r\n        }    \r\n        \r\n        \r\n    },\r\n    googlebutton:{\r\n        borderRadius:'8px',\r\n        width:'100%',\r\n        backgroundColor: '#DD4B39',\r\n        color: 'white',\r\n        height:\"50px\",\r\n        fontSize:'20px',\r\n        textAlign:'center',\r\n        \r\n       '& .dropcap':{\r\n           backgroundColor:'#fff',\r\n           color:\"#000\",\r\n           padding:\"2% 3%\",\r\n           borderRadius:'10px',\r\n           margin:\"2px\",\r\n           fontWeight:\"bold\"\r\n       }     \r\n        \r\n\r\n    },\r\n    facebookcopy:{\r\n        backgroundColor: 'blue',\r\n        color: 'white',\r\n        height: '50px',\r\n        width: '240px',\r\n        border: 'none',\r\n        textAlign: 'center',        \r\n        fontSize: '14px',\r\n        lineHeight: '48px',\r\n        display: 'block',\r\n        borderRadius: '1px', \r\n        cursor: 'pointer',\r\n        userSelect: 'none'\r\n       },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n           \r\n    \r\n    },\r\n     \r\n\r\n}));\r\n\r\nconst loginschema = Yup.object().shape({\r\n    email: Yup.string()\r\n        .min(2, 'Too Short!')\r\n        .email()\r\n        .required(\"Email is Should not be Empty\"),\r\n    password: Yup.string()\r\n        .min(2, 'Too Short!')        \r\n        .required(\"A Subscribe option is required\")\r\n        // .matches(\r\n        //     /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\r\n        //     \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character\"\r\n        //   )\r\n})\r\nconst initialValues = {\r\n    email: \"\",\r\n    password: \"\",\r\n};\r\n\r\nfunction Login({login,isAuthenticated,isAlert}) {\r\n    const classes = useStyles();\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [msg, setMsg] = React.useState('');\r\n\r\n  \r\n    \r\n      const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        }\r\n    \r\n        setOpen(false);\r\n      };\r\n\r\n\r\n\r\n    if (isAuthenticated) {\r\n        return <Redirect to=\"/profile\" />\r\n    }\r\n    \r\n    \r\n   \r\n   \r\n  \r\n    const continuewithgoogle = async () => {\r\n        \r\n        const res = await axios.get('https://app.kiranvoleti.com/auth/o/google-oauth2/?redirect_uri=https://app.kiranvoleti.com/google')\r\n        window.location.replace(res.data.authorization_url);\r\n\r\n    }\r\n    const continuewithfacebook = async () => {\r\n        \r\n        const res = await axios.get('https://app.kiranvoleti.com/auth/o/facebook/?redirect_uri=https://app.kiranvoleti.com/facebook')\r\n        window.location.replace(res.data.authorization_url);\r\n\r\n    }\r\n    \r\n\r\n    const handleSubmit = async (values) => {\r\n        setMsg('Signing in Please Wait..')\r\n        setOpen(true);\r\n        await login((values.email),(values.password))\r\n        if(isAlert){\r\n            setMsg('Something is went wrong, try again')\r\n            setOpen(true)\r\n            return \r\n        }\r\n        \r\n        if (isAuthenticated) {\r\n            return <Redirect to=\"/profile\" />\r\n        }\r\n        \r\n    };\r\n\r\n    return (\r\n        <Grid container component=\"main\" className={classes.root}>\r\n            <CssBaseline />\r\n            <Snackbar\r\n        anchorOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'center',\r\n        }}\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n        message={msg}\r\n        action={          \r\n            \r\n            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\r\n              <CloseIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          \r\n        }\r\n      />\r\n            <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Sign in\r\n          </Typography>\r\n\r\n                    <Formik\r\n                        initialValues={initialValues}\r\n                        onSubmit={handleSubmit}\r\n                        validationSchema={loginschema}\r\n\r\n                    >\r\n\r\n                        {({ dirty, isValid }) => {\r\n                            return (\r\n\r\n                                <Grid container>\r\n                                <Form className={classes.form}>\r\n                               <Grid container style={{marginBottom:'2%'}} spacing={1}>\r\n                                {/* <Grid item xs={12} sm={6} md={6} className={classes.googlebutton}>\r\n                                    <span className='dropcap'>G</span>Login with Google\r\n\r\n                                   </Grid>\r\n                                   <Grid item xs={12} sm={6} md={6} onClick={continuewithfacebook} className={classes.facebookbutton}>\r\n                                   <span className='dropcap'>F</span>Login with Facebook\r\n                                   </Grid> */}\r\n\r\n                                   <Grid item xs={12} sm={6} md={6}><GoogleButton onClick={continuewithgoogle} style={{width:\"auto\"}} /></Grid>\r\n                                   {/* <Grid item md={1}></Grid> */}\r\n                                   <Grid item xs={12} sm={6} md={6} onClick={continuewithfacebook} className={classes.facebookbutton}>\r\n                                   <div className='dropcap'><div style={{marginTop:'10%'}}>f</div></div><div style={{paddingLeft:'40px',marginTop:'3.3%'}}> Sign in with Facebook</div>\r\n                                   </Grid>\r\n                               </Grid>\r\n\r\n                                <Grid item xs={12}>\r\n                                \r\n                                    <FormikField\r\n                                        name=\"email\"\r\n                                        label=\"Email\"\r\n                                        type=\"email\"\r\n                                        required\r\n                                        textvariant=\"outlined\"\r\n\r\n                                    />\r\n                                </Grid>\r\n\r\n                                <br></br>\r\n\r\n\r\n                                <Grid item xs={12}>\r\n\r\n                                    <FormikField\r\n                                                    name=\"password\"\r\n                                                    label=\"Password\"\r\n                                                    type=\"password\"\r\n                                                    required\r\n                                                    textvariant=\"outlined\"\r\n                                                />\r\n\r\n                                </Grid>\r\n\r\n\r\n                                <Grid item xs={12} md={12} sm={12}>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        disabled={!dirty || !isValid}\r\n                                        type=\"submit\" \r\n                                        fullWidth                                       \r\n                                        className={classes.submit}\r\n                                    >\r\n                                        Login\r\n                                    </Button>\r\n                                </Grid>\r\n\r\n                                <Grid container>\r\n              <Grid item xs>\r\n              \r\n                <Link \r\n                component={RouterLink}\r\n                variant=\"body2\"\r\n                to=\"/reset-password\"\r\n                \r\n                >\r\n                  Forgot password?\r\n                  </Link>\r\n                \r\n                \r\n              </Grid>\r\n              <Grid item>\r\n                  \r\n                <Link to=\"/signup\" variant=\"body2\" component={RouterLink}>\r\n                \r\n                  {\"Don't have an account? Sign Up\"}\r\n                  \r\n                </Link>\r\n                \r\n                \r\n              </Grid>\r\n            </Grid>\r\n            <Box mt={5}>\r\n              <Copyright />\r\n            </Box>\r\n\r\n                                </Form>\r\n                                </Grid>\r\n\r\n\r\n                            );\r\n                        }}\r\n                    </Formik>\r\n\r\n                    \r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    isAlert: state.auth.loginaction\r\n});\r\n\r\nexport default connect(mapStateToProps, { login  })(Login);","E:\\material-django-react\\materialdjango\\frontend\\src\\Pages\\Auth\\ResetPassword.js",["317","318","319","320","321"],"import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport { Link as RouterLink, Redirect } from 'react-router-dom'; \r\nimport {connect} from 'react-redux';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport FormikField from \"../../Components/Controls/FormikField\";\r\nimport { reset_password } from '../../Actions/auth';\r\n\r\n\r\n\r\nfunction Copyright() {\r\n\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            {' '}\r\n            {new Date().getFullYear()}\r\n            {'. '}All Rights Reserved.\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100vh',\r\n    },\r\n    image: {\r\n        \r\n        backgroundImage: 'url(https://app.kiranvoleti.com/static/assets/images/login3.jpeg)',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor:\r\n            theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'right center',\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(8, 4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n           \r\n    \r\n    },\r\n     \r\n\r\n}));\r\n\r\nconst loginschema = Yup.object().shape({\r\n    email: Yup.string()\r\n        .min(2, 'Too Short!')\r\n        .email()\r\n        .required(\"Email is Should not be Empty\"),\r\n    \r\n        // .matches(\r\n        //     /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\r\n        //     \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character\"\r\n        //   )\r\n})\r\nconst initialValues = {\r\n    email: \"\"\r\n};\r\n\r\nfunction ResetPassword({reset_password}) {\r\n    const classes = useStyles();\r\n    const [requestSent, setRequestSent] = React.useState(false);\r\n\r\n//    if (isAuthenticated) {\r\n//        return <Redirect to=\"/profile\" />\r\n//    }\r\n\r\n    \r\n\r\n    const handleSubmit = (values) => {\r\n        \r\n        reset_password(values.email)\r\n        setRequestSent(true);\r\n        \r\n        \r\n    };\r\n    if (requestSent)\r\n        return <Redirect to='/login' />\r\n\r\n    return (\r\n        <Grid container component=\"main\" className={classes.root}>\r\n            <CssBaseline />\r\n            <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Reset Password\r\n          </Typography>\r\n\r\n                    <Formik\r\n                        initialValues={initialValues}\r\n                        onSubmit={handleSubmit}\r\n                        validationSchema={loginschema}\r\n\r\n                    >\r\n\r\n                        {({ dirty, isValid }) => {\r\n                            return (\r\n\r\n                                <Grid container>\r\n                                <Form className={classes.form}>\r\n\r\n                                <Grid item xs={12}>\r\n                                    <FormikField\r\n                                        name=\"email\"\r\n                                        label=\"Email\"\r\n                                        type=\"email\"\r\n                                        required\r\n                                        textvariant=\"outlined\"\r\n\r\n                                    />\r\n                                </Grid>\r\n\r\n                               \r\n\r\n\r\n                                <Grid item xs={12} md={12} sm={12}>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        disabled={!dirty || !isValid}\r\n                                        type=\"submit\" \r\n                                        fullWidth                                       \r\n                                        className={classes.submit}\r\n                                    >\r\n                                        Reset Password\r\n                                    </Button>\r\n                                </Grid>\r\n\r\n                                <Grid container>\r\n              <Grid item xs>\r\n              \r\n                <Link \r\n                component={RouterLink}\r\n                variant=\"body2\"\r\n                to=\"/profile\"\r\n                \r\n                >\r\n                  Back\r\n                  </Link>\r\n                \r\n                \r\n              </Grid>\r\n              <Grid item>\r\n                  \r\n                <Link to=\"/login\" variant=\"body2\" component={RouterLink}>\r\n                \r\n                  {\"Have an account? Sign In\"}\r\n                  \r\n                </Link>\r\n                \r\n                \r\n              </Grid>\r\n            </Grid>\r\n            <Box mt={5}>\r\n              <Copyright />\r\n            </Box>\r\n\r\n                                </Form>\r\n                                </Grid>\r\n\r\n\r\n                            );\r\n                        }}\r\n                    </Formik>\r\n\r\n                    \r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { reset_password  })(ResetPassword);","E:\\material-django-react\\materialdjango\\frontend\\src\\Pages\\Auth\\ResetPasswordConfirm.js",["322","323","324","325","326"],"import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport { Link as RouterLink, Redirect } from 'react-router-dom'; \r\nimport {connect} from 'react-redux';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport FormikField from \"../../Components/Controls/FormikField\";\r\n\r\nimport { reset_password_confirm } from \"../../Actions/auth\";\r\n\r\n\r\nfunction Copyright() {\r\n\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            {' '}\r\n            {new Date().getFullYear()}\r\n            {'. '}All Rights Reserved.\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100vh',\r\n    },\r\n    image: {\r\n        backgroundImage: 'url(https://app.kiranvoleti.com/static/assets/images/login3.jpeg)',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor:\r\n            theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'right center',\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(8, 4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n           \r\n    \r\n    },\r\n     \r\n\r\n}));\r\n\r\nconst resetconfirmschema = Yup.object().shape({\r\n    new_password: Yup.string()\r\n        .min(8, 'Too Short!')\r\n        .required(\"Password is Should not be Empty\")\r\n        .matches(\r\n            /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\r\n            \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character\"\r\n          ),\r\n    re_new_password: Yup.string()\r\n        .min(2, 'Too Short!')        \r\n        .required(\"A Subscribe option is required\")\r\n        .test('passwords-match', 'Passwords must match ya fool', function(value) {\r\n            return this.parent.new_password === value;\r\n          }),\r\n        \r\n})\r\nconst initialValues = {\r\n    new_password: \"\",\r\n    re_new_password: \"\",\r\n};\r\n\r\nfunction ResetPasswordConfirm(props) {\r\n    const classes = useStyles();\r\n\r\n    const [requestSent, setRequestSent] = React.useState(false);\r\n\r\n   \r\n    \r\n\r\n    const handleSubmit = (values) => {\r\n        \r\n        \r\n        const uid = props.match.params.uid;\r\n        const token = props.match.params.token;\r\n\r\n        props.reset_password_confirm(uid, token, values.new_password, values.re_new_password);\r\n        setRequestSent(true);\r\n        \r\n    };\r\n\r\n    if (requestSent)\r\n        return <Redirect to='/' />\r\n\r\n    return (\r\n        <Grid container component=\"main\" className={classes.root}>\r\n            <CssBaseline />\r\n            <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Enter New Password\r\n          </Typography>\r\n\r\n                    <Formik\r\n                        initialValues={initialValues}\r\n                        onSubmit={handleSubmit}\r\n                        validationSchema={resetconfirmschema}\r\n\r\n                    >\r\n\r\n                        {({ dirty, isValid }) => {\r\n                            return (\r\n\r\n                                <Grid container>\r\n                                <Form className={classes.form}>\r\n\r\n                                <Grid item xs={12}>\r\n                                    <FormikField\r\n                                        name=\"new_password\"\r\n                                        label=\"New Password\"\r\n                                        type=\"password\"\r\n                                        required\r\n                                        textvariant=\"outlined\"\r\n\r\n                                    />\r\n                                </Grid>\r\n\r\n                                <br></br>\r\n\r\n\r\n                                <Grid item xs={12}>\r\n\r\n                                    <FormikField\r\n                                                    name=\"re_new_password\"\r\n                                                    label=\"Retype Password\"\r\n                                                    type=\"password\"\r\n                                                    required\r\n                                                    textvariant=\"outlined\"\r\n                                                />\r\n\r\n                                </Grid>\r\n\r\n\r\n                                <Grid item xs={12} md={12} sm={12}>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        disabled={!dirty || !isValid}\r\n                                        type=\"submit\" \r\n                                        fullWidth                                       \r\n                                        className={classes.submit}\r\n                                    >\r\n                                        Confirm\r\n                                    </Button>\r\n                                </Grid>\r\n\r\n                                <Grid container>\r\n              <Grid item xs>\r\n              \r\n                <Link \r\n                component={RouterLink}\r\n                variant=\"body2\"\r\n                to=\"/\"\r\n                \r\n                >\r\n                  Back\r\n                  </Link>\r\n                \r\n                \r\n              </Grid>\r\n              <Grid item>\r\n                  \r\n                <Link to=\"/login\" variant=\"body2\" component={RouterLink}>\r\n                \r\n                  {\"have an account? Sign In\"}\r\n                  \r\n                </Link>\r\n                \r\n                \r\n              </Grid>\r\n            </Grid>\r\n            <Box mt={5}>\r\n              <Copyright />\r\n            </Box>\r\n\r\n                                </Form>\r\n                                </Grid>\r\n\r\n\r\n                            );\r\n                        }}\r\n                    </Formik>\r\n\r\n                    \r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { reset_password_confirm  })(ResetPasswordConfirm);","E:\\material-django-react\\materialdjango\\frontend\\src\\Pages\\Auth\\Activate.js",[],"E:\\material-django-react\\materialdjango\\frontend\\src\\Pages\\Auth\\Signup.js",["327"],"import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Link from '@material-ui/core/Link';\r\nimport { Link as RouterLink, Redirect } from 'react-router-dom'; \r\nimport {connect} from 'react-redux';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Formik, Form } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport FormikField from \"../../Components/Controls/FormikField\";\r\n\r\nimport { signup } from \"../../Actions/auth\";\r\n\r\n\r\nfunction Copyright() {\r\n\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            {' '}\r\n            {new Date().getFullYear()}\r\n            {'. '}All Rights Reserved.\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100vh',\r\n    },\r\n    image: {\r\n        backgroundImage: 'url(https://app.kiranvoleti.com/static/assets/images/login3.jpeg)',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor:\r\n            theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'right center',\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(8, 4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n           \r\n    \r\n    },\r\n     \r\n\r\n}));\r\n\r\nconst signupschema = Yup.object().shape({\r\n    first_name: Yup.string()\r\n        .min(2, 'Too Short!'),\r\n    email: Yup.string()\r\n        .min(2, 'Too Short!')\r\n        .email()\r\n        .required(\"Email is Should not be Empty\"),\r\n    password: Yup.string()\r\n        .min(2, 'Too Short!')        \r\n        .required(\"A Subscribe option is required\")\r\n        .matches(\r\n            /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\r\n            \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character\"\r\n          ),\r\n    re_password:Yup.string()\r\n    .min(2, 'Too Short!')        \r\n    .required(\"A Subscribe option is required\")\r\n    .test('passwords-match', 'Passwords must match ya fool', function(value) {\r\n        return this.parent.password === value;\r\n      })\r\n})\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\nconst initialValues = {\r\n    first_name:\"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    re_password:\"\",\r\n    provider:\"rest\"\r\n};\r\n\r\nfunction Signup({signup,isAuthenticated,isSignup}) {\r\n    const classes = useStyles();\r\n    \r\n    const [requestSent, setRequestSent] = React.useState(false)\r\n    const [open, setOpen] = React.useState(false);\r\n    const [snakreq,setSnakreq] = React.useState({\r\n        message:\"\",\r\n        color:\"inherit\"\r\n\r\n    })\r\n\r\n   if (isAuthenticated) {\r\n       return <Redirect to=\"/login\" />\r\n   }\r\n\r\n\r\n    //    Snackbar\r\n\r\n    \r\n    \r\n      const handleClose = (event,reason) => {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        }\r\n    \r\n        setOpen(false);\r\n      };\r\n\r\n    // Snackbar\r\n    \r\n\r\n    const handleSubmit = (values) => {\r\n       \r\n        signup((values.first_name),(values.email),(values.provider),(values.password),(values.re_password))\r\n        setRequestSent(true)\r\n        if (!isSignup){\r\n            setSnakreq({...snakreq , message:\"Something is went wrong, Make sure this is unique Email !!\", color:\"error\"})\r\n            return (\r\n                setOpen(true)               \r\n                \r\n                );\r\n        }\r\n        \r\n        \r\n        \r\n        \r\n    };\r\n\r\n    // if (requestSent) return <Redirect to=\"/login\" />\r\n\r\n    return (\r\n        <Grid container component=\"main\" className={classes.root}>\r\n            \r\n            <CssBaseline />\r\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity={snakreq.color}>\r\n                    {snakreq.message}\r\n                </Alert>\r\n            </Snackbar>\r\n            <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Sign up\r\n          </Typography>\r\n\r\n                    <Formik\r\n                        initialValues={initialValues}\r\n                        onSubmit={handleSubmit}\r\n                        validationSchema={signupschema}\r\n\r\n                    >\r\n\r\n                        {({ dirty, isValid }) => {\r\n                            return (\r\n\r\n                                <Grid container>\r\n                                <Form className={classes.form}>\r\n\r\n                                <Grid item xs={12}>\r\n                                <FormikField\r\n                                        name=\"first_name\"\r\n                                        label=\"Name\"\r\n                                        type=\"text\"\r\n                                        required\r\n                                        textvariant=\"outlined\"\r\n\r\n                                    />\r\n                                   \r\n                                    <br></br>\r\n                                    <FormikField\r\n                                        name=\"email\"\r\n                                        label=\"Email\"\r\n                                        type=\"email\"\r\n                                        required\r\n                                        textvariant=\"outlined\"\r\n\r\n                                    />\r\n                                </Grid>\r\n\r\n                                <br></br>\r\n\r\n\r\n                                <Grid item xs={12}>\r\n\r\n                                    <FormikField\r\n                                                    name=\"password\"\r\n                                                    label=\"Password\"\r\n                                                    type=\"password\"\r\n                                                    required\r\n                                                    textvariant=\"outlined\"\r\n                                                />\r\n                                                <br></br>\r\n                                                 <FormikField\r\n                                                    name=\"re_password\"\r\n                                                    label=\"Retype Password\"\r\n                                                    type=\"password\"\r\n                                                    required\r\n                                                    textvariant=\"outlined\"\r\n                                                />\r\n\r\n                                </Grid>\r\n\r\n\r\n                                <Grid item xs={12} md={12} sm={12}>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        disabled={!dirty || !isValid}\r\n                                        type=\"submit\" \r\n                                        fullWidth                                       \r\n                                        className={classes.submit}\r\n                                    >\r\n                                        Sign up\r\n                                    </Button>\r\n                                </Grid>\r\n\r\n                                <Grid container>\r\n              <Grid item xs>\r\n              \r\n                <Link \r\n                component={RouterLink}\r\n                variant=\"body2\"\r\n                to=\"/reset-password\"\r\n                \r\n                >\r\n                  Forgot password?\r\n                  </Link>\r\n                \r\n                \r\n              </Grid>\r\n              <Grid item>\r\n                  \r\n                <Link to=\"/login\" variant=\"body2\" component={RouterLink}>\r\n                \r\n                  {\"Have an account? Sign In\"}\r\n                  \r\n                </Link>\r\n                \r\n                \r\n              </Grid>\r\n            </Grid>\r\n            <Box mt={5}>\r\n              <Copyright />\r\n            </Box>\r\n\r\n                                </Form>\r\n                                </Grid>\r\n\r\n\r\n                            );\r\n                        }}\r\n                    </Formik>\r\n\r\n                    \r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    isSignup: state.auth.isSignup,\r\n});\r\n\r\nexport default connect(mapStateToProps, { signup  })(Signup);","E:\\material-django-react\\materialdjango\\frontend\\src\\Actions\\auth.js",["328"],"import axios from 'axios';\r\nimport {  \r\n    SIGNUP_SUCCESS,\r\n    SIGNUP_FAIL,  \r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    ACTIVATION_SUCCESS,\r\n    ACTIVATION_FAIL,\r\n    USER_LOADED_SUCCESS,\r\n    USER_LOADED_FAIL,\r\n    AUTHENTICATED_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    RESET_PASSWORD_SUCCESS,\r\n    RESET_PASSWORD_FAIL,\r\n    RESET_PASSWORD_CONFIRM_SUCCESS,\r\n    RESET_PASSWORD_CONFIRM_FAIL,\r\n    GOOGLE_AUTH_SUCCESS,\r\n    GOOGLE_AUTH_FAIL,\r\n    FACEBOOK_AUTH_SUCCESS,\r\n    FACEBOOK_AUTH_FAIL,\r\n    REPORT_ISSUE_SUCCESS,\r\n    REPORT_ISSUE_FAIL,\r\n    CONTACT_SUCCESS,    \r\n    LOGOUT\r\n    \r\n\r\n} from './types';\r\n\r\nconst process_env_REACT_APP_API_URL= \"https://app.kiranvoleti.com\"\r\n\r\n\r\nexport const load_user = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n                'Accept': 'application/json'\r\n            }\r\n        };\r\n\r\n        try {\r\n            const res = await axios.get(`${process_env_REACT_APP_API_URL}/auth/users/me/`, config);\r\n\r\n            dispatch({\r\n                type: USER_LOADED_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        } catch (err) {\r\n            dispatch({\r\n                type: USER_LOADED_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        dispatch({\r\n            type: USER_LOADED_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const checkAuthenticated = () => async dispatch => {\r\n    if (typeof window == 'undefined') {\r\n        dispatch({\r\n            type: AUTHENTICATED_FAIL\r\n        });\r\n    }\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n    \r\n        const body = JSON.stringify({ token: localStorage.getItem('access') });\r\n    \r\n        try {\r\n            const res = await axios.post(`${process_env_REACT_APP_API_URL}/auth/jwt/verify/`, body, config);\r\n    \r\n            if (res.data.code !== 'token_not_valid') {\r\n                dispatch({\r\n                    type: AUTHENTICATED_SUCCESS\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: AUTHENTICATED_FAIL\r\n                });\r\n            }\r\n        } catch (err) {\r\n            dispatch({\r\n                type: AUTHENTICATED_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        dispatch({\r\n            type: AUTHENTICATED_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const googleAuthenticate = (state, code) => async dispacth => {\r\n    if (state && code && !localStorage.getItem('access')) {\r\n        const config ={\r\n            headers: {\r\n                'Content-Type':'application/x-www-form-urlencoded'\r\n            }\r\n        }\r\n        const details ={\r\n            'state':state,\r\n            'code':code,\r\n            'first_name':'imfirstname'\r\n            \r\n        };\r\n        const formBody = Object.keys(details).map(key => encodeURIComponent(key) + '=' + encodeURIComponent(details[key])).join('&')\r\n        try {\r\n            const res = await axios.post(`${process_env_REACT_APP_API_URL}/auth/o/google-oauth2/?${formBody}`,config);\r\n            console.log(res.data)\r\n            alert(res.data)\r\n            dispacth({\r\n                type: GOOGLE_AUTH_SUCCESS,\r\n                payload:res.data\r\n            });\r\n            dispacth(load_user);\r\n        }\r\n        catch(err){\r\n            \r\n            dispacth({\r\n                type: GOOGLE_AUTH_FAIL\r\n            })\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport const facebookAuthenticate = (state, code) => async dispacth => {\r\n    \r\n    if (state && code && !localStorage.getItem('access')) {\r\n        const config ={\r\n            headers: {\r\n                'Content-Type':'application/x-www-form-urlencoded'\r\n            }\r\n        }\r\n        const details ={\r\n            'state':state,\r\n            'code':code\r\n        };\r\n        const formBody = Object.keys(details).map(key => encodeURIComponent(key) + '=' + encodeURIComponent(details[key])).join('&')\r\n        try {\r\n            const res = await axios.post(`${process_env_REACT_APP_API_URL}/auth/o/facebook/?${formBody}`,config);\r\n            \r\n            dispacth({\r\n                type: FACEBOOK_AUTH_SUCCESS,\r\n                payload:res.data\r\n            });\r\n            dispacth(load_user);\r\n            \r\n        }\r\n        catch(err){\r\n            \r\n            dispacth({\r\n                type: FACEBOOK_AUTH_FAIL\r\n            })\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport const login = (email, password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ email, password });\r\n\r\n    try {\r\n        const res = await axios.post(`${process_env_REACT_APP_API_URL}/auth/jwt/create/`, body, config);\r\n\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(load_user());\r\n        \r\n    } catch (err) {\r\n        \r\n        dispatch({\r\n            type: LOGIN_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const signup = (first_name, email, provider, password, re_password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n    \r\n    const body = JSON.stringify({ first_name, email,provider,password, re_password }); \r\n   \r\n\r\n    try {\r\n        const res = await axios.post(`${process_env_REACT_APP_API_URL}/auth/users/`, body, config);\r\n\r\n        dispatch({\r\n            type: SIGNUP_SUCCESS,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: SIGNUP_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const verify = (uid, token) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({ uid, token }); \r\n\r\n    try {\r\n        const res = await axios.post(`${process_env_REACT_APP_API_URL}/auth/users/activation/`, body, config);\r\n        \r\n        dispatch({\r\n            type: ACTIVATION_SUCCESS,\r\n            payload: res.data\r\n        });\r\n        \r\n    } catch (err) {\r\n        alert(err)\r\n        dispatch({\r\n            type: ACTIVATION_FAIL\r\n        });\r\n        \r\n    }\r\n};\r\nexport const reset_password = (email) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({ email }); \r\n\r\n    try {\r\n        const res = await axios.post(`${process_env_REACT_APP_API_URL}/auth/users/reset_password/`, body, config);\r\n\r\n        dispatch({\r\n            type: RESET_PASSWORD_SUCCESS,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: RESET_PASSWORD_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const reset_password_confirm = (uid, token, new_password, re_new_password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({ uid, token, new_password, re_new_password }); \r\n\r\n    try {\r\n        const res = await axios.post(`${process_env_REACT_APP_API_URL}/auth/users/reset_password_confirm/`, body, config);\r\n\r\n        dispatch({\r\n            type: RESET_PASSWORD_CONFIRM_SUCCESS,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: RESET_PASSWORD_CONFIRM_FAIL\r\n        });\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n// operations frontend\r\n \r\nexport const frontendoperations = (dataobject) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n            'Accept': 'application/json'\r\n        }\r\n    };\r\n\r\n    \r\n    const type=dataobject.action;\r\n    const form_data = new FormData();\r\n    switch (type) {\r\n        case 'report':\r\n            \r\n            form_data.append('email',dataobject.email)\r\n            form_data.append('url',dataobject.url)\r\n            form_data.append('inputRadios',dataobject.inputRadios)\r\n            const res = await axios.post(`${process_env_REACT_APP_API_URL}/reportissue/`, form_data, config);\r\n            if(res.data.msg === \"REPORT_ISSUE_SUCCESS\"){\r\n        \r\n                dispatch({\r\n                    type: REPORT_ISSUE_SUCCESS\r\n                });\r\n        \r\n            }\r\n            else {\r\n                dispatch({\r\n                    type: REPORT_ISSUE_FAIL\r\n                });\r\n            }\r\n            break;\r\n        case 'help':\r\n            \r\n            form_data.append('email',dataobject.email)\r\n            form_data.append('username',dataobject.username)\r\n            form_data.append('message',dataobject.message)\r\n            await axios.post(`https://app.kiranvoleti.com/contact/`, form_data, config);\r\n            \r\n        \r\n            dispatch({\r\n                type: CONTACT_SUCCESS\r\n            });\r\n        \r\n              break;\r\n        \r\n        default:\r\n            const s='v'\r\n\r\n\r\n    }\r\n\r\n    \r\n    \r\n    \r\n    \r\n    \r\n\r\n    \r\n\r\n    \r\n};\r\n\r\n// operations frontend\r\n\r\nexport const logout = () => dispatch => {\r\n    dispatch({ type: LOGOUT });\r\n};","E:\\material-django-react\\materialdjango\\frontend\\src\\Actions\\types.js",[],"E:\\material-django-react\\materialdjango\\frontend\\src\\store.js",[],"E:\\material-django-react\\materialdjango\\frontend\\src\\Reducers\\index.js",[],"E:\\material-django-react\\materialdjango\\frontend\\src\\Reducers\\auth.js",["329"],"/* eslint-disable import/no-anonymous-default-export */\r\nimport {\r\n    SIGNUP_SUCCESS,\r\n    SIGNUP_FAIL,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    USER_LOADED_SUCCESS,\r\n    USER_LOADED_FAIL,\r\n    LOGOUT,\r\n    AUTHENTICATED_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    GOOGLE_AUTH_SUCCESS,\r\n    GOOGLE_AUTH_FAIL,\r\n    FACEBOOK_AUTH_SUCCESS,\r\n    FACEBOOK_AUTH_FAIL,\r\n    REPORT_ISSUE_SUCCESS,\r\n    REPORT_ISSUE_FAIL,\r\n    CONTACT_SUCCESS,\r\n    LOAD_USER_PROFILE_SUCCESS\r\n\r\n} from '../Actions/types';\r\n\r\nconst initialState = {\r\n    access: localStorage.getItem('access'),\r\n    refresh: localStorage.getItem('refresh'),\r\n    isSignup:false,\r\n    isAuthenticated: null,\r\n    user: null,\r\n    isAction: 'success',\r\n    loginaction:false,\r\n    profile: {},\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n\r\n        \r\n        case GOOGLE_AUTH_SUCCESS:\r\n            localStorage.setItem('access', payload.access);\r\n            localStorage.setItem('refresh', payload.refresh); \r\n             \r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                access: payload.access,\r\n                refresh: payload.refresh\r\n            }\r\n        case LOGIN_SUCCESS:\r\n        case FACEBOOK_AUTH_SUCCESS:\r\n            localStorage.setItem('access', payload.access);\r\n            localStorage.setItem('refresh', payload.refresh);   \r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                access: payload.access,\r\n                refresh: payload.refresh\r\n            }\r\n\r\n        case USER_LOADED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                user: payload\r\n            }\r\n\r\n        case SIGNUP_SUCCESS:\r\n            \r\n            return {\r\n                ...state,\r\n                isAuthenticated: false,\r\n                isSignup:true\r\n            }\r\n        \r\n        case USER_LOADED_FAIL:\r\n            return {\r\n                ...state,\r\n                user: null\r\n            }        \r\n            \r\n        case GOOGLE_AUTH_FAIL:\r\n        case FACEBOOK_AUTH_FAIL:\r\n        case LOGIN_FAIL:\r\n        case SIGNUP_FAIL:\r\n        case LOGOUT:            \r\n            localStorage.removeItem('access');\r\n            localStorage.removeItem('refresh');\r\n            \r\n            return {\r\n                ...state,\r\n                access: null,\r\n                refresh: null,\r\n                isAuthenticated: false,\r\n                user: null,\r\n                loginaction:true\r\n            }\r\n        case AUTHENTICATED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true\r\n            }\r\n        case AUTHENTICATED_FAIL:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false\r\n            }\r\n        case REPORT_ISSUE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAction:true\r\n            }\r\n        case REPORT_ISSUE_FAIL:\r\n            return {\r\n                ...state,\r\n                isAction:false\r\n            }\r\n        case CONTACT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAction:true\r\n            }\r\n    \r\n            \r\n        \r\n        default:\r\n            return state\r\n    }\r\n}","E:\\material-django-react\\materialdjango\\frontend\\src\\Layouts\\Auth.js",["330"],"import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { checkAuthenticated, load_user } from '../Actions/auth';\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Signup from \"../Pages/Auth/Signup\";\r\nimport Login from '../Pages/Auth/Login'\r\n\r\nconst Auth = (props) => {\r\n   \r\n\r\n    React.useEffect(() => {\r\n           \r\n           \r\n    props.checkAuthenticated();\r\n    props.load_user();\r\n          \r\n        \r\n\r\n        \r\n    }, []);\r\n    return (\r\n        <div>\r\n            <Switch>\r\n            <Route exact path=\"/login\" component= {Login} />            \r\n            <Route exact path='/signup' component={Signup} />\r\n            <Route exact path=\"/\" component= {Login} />\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, { checkAuthenticated, load_user })(Auth);\r\n","E:\\material-django-react\\materialdjango\\frontend\\src\\Components\\Socialauth\\Google.js",["331"],"import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { googleAuthenticate } from '../../Actions/auth';\r\nimport { Route, Switch, useLocation } from \"react-router-dom\";\r\nimport Login from '../../Pages/Auth/Login'\r\nimport queryString from 'query-string'\r\n\r\nconst Google = (props) => {\r\n    let location = useLocation(); \r\n\r\n    React.useEffect(() => {\r\n            \r\n            const values = queryString.parse(location.search);\r\n            const state = values.state ? values.state : null;\r\n            const code = values.code ? values.code : null;\r\n\r\n            console.log('State: ' + state);\r\n            console.log('Code: ' + code);\r\n            \r\n\r\n            if(state && code){\r\n                props.googleAuthenticate(state, code ,'google');\r\n            }\r\n            \r\n        \r\n\r\n        \r\n    }, [])\r\n    return (\r\n        <div>\r\n            <Switch>                   \r\n            <Route exact path=\"/google\" component= {Login} />\r\n            <Route exact path=\"/\" component= {Login} />\r\n            </Switch>\r\n            Signing in\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, { googleAuthenticate })(Google);\r\n","E:\\material-django-react\\materialdjango\\frontend\\src\\Components\\Socialauth\\Facebook.js",["332"],"import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { facebookAuthenticate } from '../../Actions/auth';\r\nimport { Route, Switch, useLocation,Redirect } from \"react-router-dom\";\r\nimport Login from '../../Pages/Auth/Login'\r\nimport queryString from 'query-string'\r\n\r\nconst Facebook = ({facebookAuthenticate,isAuthenticated}) => {\r\n    let location = useLocation(); \r\n\r\n    React.useEffect(() => {\r\n            \r\n            const values = queryString.parse(location.search);\r\n            const state = values.state ? values.state : null;\r\n            const code = values.code ? values.code : null;\r\n\r\n            console.log('State: ' + state);\r\n            console.log('Code: ' + code);\r\n            \r\n            if (isAuthenticated) {\r\n                return <Redirect to=\"/profile\" />\r\n            }\r\n\r\n            if(state && code){\r\n                facebookAuthenticate(state, code);\r\n                \r\n            }\r\n            else{\r\n                alert('nostate')\r\n            }\r\n            \r\n        \r\n\r\n        \r\n    }, [location])\r\n    return (\r\n        <div>\r\n            <Switch>\r\n            <Route exact path=\"/facebook\" component= {Login} />\r\n            <Route exact path=\"/\" component= {Login} />\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\nexport default connect(mapStateToProps, { facebookAuthenticate })(Facebook);\r\n","E:\\material-django-react\\materialdjango\\frontend\\src\\Pages\\Profile\\Help.js",["333","334"],"import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Grid,\r\n  TextField,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\nimport {frontendoperations} from \"../../Actions/auth\";\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Help = ({ className,frontendoperations,isAuthenticated,isAction,snakreq,setsnakreq,open, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  const firstvalues = {\r\n    email:\"nagendrakumar422@gmail.com\",\r\n    username: \"nagendrakumar422@gmail.com\",\r\n    message:\"\"\r\n  };\r\n  const [values, setValues] = React.useState(firstvalues)\r\n  \r\n\r\n  const handleChange = (event) => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  \r\n  const handleSubmit = async () => {   \r\n    await frontendoperations({action:'help',email:firstvalues.email,username:firstvalues.username,message:firstvalues.message})\r\n    if(isAction){\r\n      setsnakreq({...snakreq,\r\n        message:\"Successfully Message Sent !!\",\r\n        color:\"success\"});\r\n    }else{\r\n      setsnakreq({...snakreq,\r\n        message:\"Something is Went Wrong !!\",\r\n        color:\"error\"});\r\n    }  \r\n    open(true)\r\n  };\r\n\r\n  return (\r\n    <form\r\n      autoComplete=\"off\"\r\n      noValidate\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n          subheader=\"Describe in your own words\"\r\n          title=\"Support\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n            <Grid\r\n              item\r\n              md={12}\r\n              xs={12}\r\n            >\r\n             <TextField\r\n                fullWidth\r\n                label=\"Contact Admin\"\r\n                name=\"message\"\r\n                multiline\r\n                onChange={handleChange}\r\n                rows={5}\r\n                rowsMax={6}                \r\n                variant=\"outlined\"\r\n                \r\n              />\r\n            </Grid>   \r\n                   \r\n            <Grid item md={12} xs={12}>\r\n            <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={handleSubmit}\r\n            disabled = {values.message.length >= 2 ? false:true}\r\n          >            \r\n           Send Now \r\n          </Button>\r\n          </Grid>\r\n           \r\n          </Grid>\r\n        </CardContent>\r\n       \r\n      </Card>\r\n    </form>\r\n  );\r\n};\r\n\r\nHelp.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  isAction: state.auth.isAction\r\n});\r\n\r\nexport default connect(mapStateToProps, { frontendoperations  })(Help);\r\n","E:\\material-django-react\\materialdjango\\frontend\\src\\Pages\\Profile\\Report.js",["335","336","337","338","339","340"],"import React from 'react'\r\nimport {\r\n    Avatar,\r\n    Box,\r\n    Button,\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    Divider,\r\n    Typography,\r\n    CardHeader,\r\n    Paper,\r\n    Grid,\r\n    makeStyles\r\n} from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport FormikField from \"../../Components/Controls/FormikField\";\r\nimport FormikRadio from \"../../Components/Controls/FormikRadio\";\r\nimport {frontendoperations} from \"../../Actions/auth\";\r\nimport {connect} from 'react-redux';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n        minHeight:'325px'\r\n    },\r\n    avatar: {\r\n        height: 100,\r\n        width: 100\r\n    },\r\n    iconclass: {\r\n        backgroundColor: '#6573c3',\r\n        color: '#fff',\r\n        padding: '5px 10px',\r\n        borderRadius: '5px'\r\n    }\r\n}));\r\n\r\nconst notificationschema = Yup.object().shape({\r\n  url: Yup.string()\r\n        .min(2, 'Too Short!')\r\n        .required(\"Link is Should not be Empty\"),\r\n        inputRadios: Yup.string()\r\n    .required(\"A Subscribe option is required\")\r\n})\r\nconst initialValues = {\r\n    email:localStorage.getItem('email'),\r\n    url: \"\",\r\n    inputRadios:\"\"\r\n};\r\n\r\n\r\nconst Report = ({ className,frontendoperations,isAuthenticated,isAction,snakreq,setsnakreq,open, ...rest }) => {\r\n    const classes = useStyles();\r\n    \r\n    \r\n    const handleSubmit = async (values) => {      \r\n      \r\n        await frontendoperations({...values,action:'report',email:initialValues.email})\r\n        if(!isAction){\r\n          setsnakreq({...snakreq,\r\n            message:\"Successfully Reported !!\",\r\n            color:\"success\"});\r\n        }else{\r\n          setsnakreq({...snakreq,\r\n            message:\"Something is Went Wrong !!\",\r\n            color:\"error\"});\r\n\r\n        }\r\n        \r\n        open(true)\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Card\r\n                className={clsx(classes.root, className)}\r\n                {...rest}\r\n            >\r\n                <CardHeader\r\n                    subheader=\"Report Link\"\r\n                    title=\"We Remove Your Data\"\r\n                />\r\n                <Divider />\r\n                <CardContent>\r\n                    <Paper elevation={0}>\r\n\r\n                        <Grid container spacing={3}>\r\n\r\n                            <Formik\r\n                                initialValues={initialValues}\r\n                                onSubmit={handleSubmit}\r\n                                validationSchema={notificationschema}\r\n                            >\r\n\r\n                                {({ dirty, isValid }) => {\r\n                                    return (\r\n                                        <Grid item xs={12}>\r\n                                            \r\n                                            <Form>\r\n\r\n                                            \r\n                                                <FormikField\r\n                                                    textvariant=\"outlined\"\r\n                                                    name=\"url\"\r\n                                                    label=\"URL\"\r\n                                                    required\r\n                                                />\r\n                                            \r\n\r\n                                            \r\n                                            <br />\r\n\r\n                                                \r\n                                                    <FormikRadio\r\n                                                    name=\"inputRadios\"\r\n                                                    label=\"InputRadios\"\r\n                                                    val=\"block\"\r\n                                                    required\r\n                                                    />\r\n                                                     <FormikRadio\r\n                                                    name=\"inputRadios\"\r\n                                                    label=\"InputRadios\"\r\n                                                    val=\"unblock\"\r\n                                                    required\r\n                                                    />\r\n                                                \r\n\r\n                                                \r\n                                                    <Button\r\n                                                        variant=\"contained\"\r\n                                                        color=\"primary\"\r\n                                                        disabled={!dirty || !isValid}\r\n                                                        type=\"submit\"\r\n\r\n                                                    >\r\n                                                        Submit\r\n                                                    </Button>\r\n                                                \r\n\r\n                                            </Form>\r\n                                        </Grid>\r\n\r\n                                    );\r\n                                }}\r\n                            </Formik>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                        </Grid>\r\n                    </Paper>\r\n\r\n                </CardContent>\r\n\r\n\r\n\r\n            </Card>\r\n\r\n        </>\r\n    )\r\n}\r\nReport.propTypes = {\r\n    className: PropTypes.string\r\n}\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  isAction: state.auth.isAction\r\n});\r\n\r\nexport default connect(mapStateToProps, { frontendoperations  })(Report);\r\n","E:\\material-django-react\\materialdjango\\frontend\\src\\Pages\\Data\\Articles.js",["341","342","343","344","345"],"import React, { useState, useRef, useCallback } from 'react'\r\nimport useArticleSearch from './useArticleSearch'\r\nimport { CircularProgress, Button, Grid, Avatar, Box, Chip, TextField, MenuItem, FormControl, InputLabel, Input, FormHelperText, Link } from '@material-ui/core';\r\nimport Moment from 'react-moment';\r\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\r\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\r\nimport PublicIcon from '@material-ui/icons/Public';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root:{},\r\n  cardsource: {\r\n    // maxWidth:'370px',\r\n    // maxWidth: '340px',\r\n    // boxSizing:'border-box',\r\n    borderRadius:'0px',\r\n    marginTop: '1%',\r\n    '& .MuiCardContent-root': {\r\n      padding: '22px',\r\n      minHeight: '260px',\r\n      maxHeight: '260px',\r\n    },\r\n    '& .MuiTypography-h6': {\r\n      margin: '5px auto',\r\n      paddingTop: '2%',\r\n      maxHeight: '95px',\r\n      minHeight: '95px',\r\n      overflow: 'hidden',\r\n      justifyContent: 'center'\r\n    },\r\n    '& .MuiSelect-outlined.MuiSelect-outlined': {\r\n      paddingRight: '50px'\r\n\r\n    },\r\n    '& a': {\r\n      textDecoration: 'none'\r\n    }\r\n\r\n\r\n  },\r\n  small: {\r\n    width:'10px',\r\n    height:'10px',\r\n    top:'5.5px'\r\n  },\r\n  content: {\r\n    padding: '2px auto auto atuo'\r\n  },\r\n\r\n  formalign: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: '50px'\r\n    }\r\n  },\r\n  buttonalign: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: '100px'\r\n    },\r\n    [theme.breakpoints.down('sm')]: {\r\n      marginLeft: '30px'\r\n    },\r\n  },\r\n  card: {\r\n    position: 'relative',\r\n  },\r\n  productImageOverlay: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n    height: '140px',\r\n    width: '100%',\r\n    opacity: 0.2,\r\n    transition: '.5s ease',\r\n    background: 'black',\r\n    // zIndex:5555,  \r\n    backgroundImage: 'linear-gradient(to bottom, rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.1))',\r\n    cursor: 'pointer',\r\n    '&:hover': {\r\n      opacity: 0.5\r\n    }\r\n  },\r\n  tagcontent:{\r\n    position: 'relative',\r\n    marginTop: 'auto',\r\n    paddingTop: '5%',\r\n    display: 'flex',\r\n    maxHeight: '56px',\r\n    minHeight: '56px',\r\n    overflow: 'hidden',\r\n    justifyContent: 'flex-start',\r\n    alignItems: 'center'\r\n  },\r\n  tagtext:{\r\n    marginTop: '5px',\r\n    fontSize: '8px',\r\n    position: 'relative',      \r\n    color: '#5c5a5a',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    cursor: 'pointer'\r\n  },\r\n  tagcategorytesting:{\r\n    alignItems:\"center\",\r\n    backgroundColor: '#f9f9f9',\r\n      padding: '5px',\r\n      color: '#030303',\r\n      height: '24px',\r\n      minWidth: '12px',\r\n      fontSize: '11px',\r\n      // padding: 'auto 0px',\r\n      borderRadius: '16px',\r\n      boxSizing: 'border-box',\r\n      outline: 'none',\r\n      overflow: 'hidden',\r\n      \r\n      /* user-select: none; */\r\n      textAlign: 'center',\r\n      verticalAlign: 'baseline',\r\n      /* margin-bottom: -11.5rem; */\r\n      marginTop: '-0.5rem',\r\n      marginRight: '3px',\r\n      cursor: 'pointer'\r\n  },\r\n  searchformcustom:{\r\n    display:\"flex\",\r\n    alignItems:\"center\",\r\n    justifyContent:\"space-between\",\r\n    \r\n    '& .MuiSelect-select':{\r\n      minWidth:'150px'\r\n    },\r\n    [theme.breakpoints.down('sm')]: {\r\n      justifyContent:\"flex-start\",\r\n      margin:'5px 3px'\r\n    }\r\n  }\r\n}));\r\nconst toUpperCaseFilter = (d) => {\r\n  if (d === \"a day ago\") {\r\n    return d.replace(\"a day ago\", \"1 day ago\");\r\n  } else if (d === \"a month ago\") {\r\n    return d.replace(\"a month ago\", \"1 month ago\");\r\n  } else if (d === \"a year ago\") {\r\n    return d.replace(\"a year ago\", \"1 year ago\");\r\n  }\r\n  else {\r\n    return d;\r\n  }\r\n\r\n};\r\n\r\nconst Articles = () => {\r\n\r\n  \r\n  const [query, setQuery] = useState('')\r\n  const [pageNumber, setPageNumber] = useState(1)\r\n  const [orderby, setOrderby] = useState('newest')\r\n  const [errormsg, setErrormsg] = useState('')\r\n  React.useEffect(() => {\r\n    if (!localStorage.getItem('remain')) {\r\n      setErrormsg('Your Plan is Expired! Upgrade Now')      \r\n      \r\n    }\r\n  \r\n  }, [])\r\n  \r\n\r\n  const {\r\n    articles,\r\n    hasMore,\r\n    loading,\r\n    error    \r\n  } = useArticleSearch(query, pageNumber, orderby)\r\n\r\n  const classes = useStyles();\r\n\r\n\r\n  const observer = useRef()\r\n  const lastBookElementRef = useCallback(node => {\r\n    if (loading) return\r\n    if (observer.current) observer.current.disconnect()\r\n    observer.current = new IntersectionObserver(entries => {\r\n      if (entries[0].isIntersecting && hasMore) {\r\n        setPageNumber(prevPageNumber => prevPageNumber + 1)\r\n      }\r\n    })\r\n    if (node) observer.current.observe(node)\r\n  }, [loading, hasMore])\r\n\r\n  function handleSearch(e) {\r\n\r\n    setOrderby(orderby)\r\n    setPageNumber(1)\r\n  }\r\n\r\n  // function keytagsearch(e) {\r\n  //   // setPageNumber(1)\r\n  //   console.log(e)\r\n  //   setQuery(e.target.id)\r\n  // }\r\n\r\n\r\n  const urlparser = (url) => {\r\n    var parser = new URL(url);\r\n    var newurl = parser.host;\r\n    return newurl;\r\n  }\r\n\r\n  const addDefaultSrc = (ev) => {\r\n    ev.target.src = 'https://app.kiranvoleti.com/static/assets/images/imagenotfound.jpg'\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Grid container style={{ backgroundColor: \"#fff\", padding: '0.6% 0 0 2%', minHeight:'100px' }}\r\n        alignContent=\"center\"\r\n        alignItems=\"center\"\r\n        justify=\"flex-start\"\r\n      >\r\n\r\n\r\n\r\n\r\n        <Grid item xs={12} md={3} sm={5}>\r\n          \r\n          <Box className={classes.searchformcustom}>\r\n          <label>Query : </label>\r\n          <TextField id=\"outlined-basic\"\r\n            label=\"keyword\"\r\n            variant=\"outlined\"\r\n            size=\"small\"            \r\n            onChange={(e) => setQuery(e.target.value)}\r\n          />\r\n          </Box>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={5} sm={12} className={classes.formalign}>\r\n        <Box className={classes.searchformcustom}>\r\n          <InputLabel >Order : </InputLabel>\r\n          <TextField\r\n            id=\"outlined-select-currency\"\r\n            select\r\n            label=\"Select\"\r\n            size=\"small\"\r\n            onChange={(e) => setOrderby(e.target.value)}            \r\n            variant=\"outlined\"\r\n          >\r\n\r\n            <MenuItem key='newest' value='newest'>\r\n              New\r\n            </MenuItem>\r\n            <MenuItem key='oldest' value='oldest'>\r\n              Oldest\r\n            </MenuItem>\r\n\r\n          </TextField>\r\n          \r\n          <Button onClick={handleSearch} className={classes.buttonalign} variant=\"contained\" color=\"primary\">Submit</Button>\r\n          </Box>\r\n        </Grid>\r\n\r\n        </Grid>\r\n\r\n\r\n\r\n     \r\n\r\n      <Grid container spacing={2}>\r\n      {articles.map((item, index) => {\r\n        if (articles.length === index + 1) {\r\n          // return <div ref={lastBookElementRef} key={index}>{article.title}</div>\r\n          return <Grid item xs={12} md={3} sm={3} key={index} ref={lastBookElementRef}>\r\n\r\n            <Card elevation={0} className={classes.cardsource}>\r\n              <CardActionArea>\r\n                <Link href={item.URL} underline=\"none\">\r\n                  <CardMedia\r\n                    component=\"img\"\r\n                    alt={item.title}\r\n                    height=\"140\"\r\n                    image={item.image}\r\n                    title={item.title}\r\n                    onError={addDefaultSrc}\r\n                  />\r\n\r\n                </Link>\r\n                <Box className={classes.productImageOverlay}></Box>\r\n              </CardActionArea>\r\n              <CardContent>\r\n\r\n\r\n                <Box display=\"flex\">\r\n                  <Box>\r\n                    <Avatar className={classes.small}>\r\n                      <PublicIcon style={{fontSize:'11px'}} />\r\n                    </Avatar>\r\n                    <Link href={item.URL} underline=\"none\" color=\"inherit\">\r\n                      <Typography gutterBottom variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n\r\n                        {urlparser(item.URL)}\r\n                      </Typography>\r\n                    </Link>\r\n                  </Box>\r\n                  \r\n\r\n                </Box>\r\n\r\n                \r\n                <Box className={classes.content}>\r\n                  <Link href={item.URL} underline=\"none\" color=\"inherit\" target=\"_blank\">\r\n                    <Typography variant=\"h6\" component=\"p\">\r\n                      {item.title}\r\n                    </Typography>\r\n                  </Link>\r\n                </Box>\r\n\r\n                <Box className={classes.tagcontent}>\r\n                  <Box className={classes.tagtext}>\r\n                  <LocalOfferIcon  style={{ color: \"lightgray\",fontSize:'1rem' }} />\r\n                  \r\n \r\n\r\n                  {item.keytags.map((val, index) => (\r\n                    // <Chip size=\"small\" key={index} label={val} style={{ margin: \"2px\", wrap: 'wrap', overflow: 'hidden' }} id={val} onClick={(e) => { setQuery(val); setPageNumber(1) }} />\r\n                    <div key={index}  className={classes.tagcategorytesting} id={val} onClick={(e) => { setQuery(val); setPageNumber(1) }}>{val}</div>\r\n                  ))}\r\n                </Box>\r\n                </Box>\r\n\r\n\r\n                <Box display=\"flex\" justifyContent=\"flex-start\" alignItems=\"center\">\r\n                  <AccessTimeIcon fontSize='small' />\r\n                    &nbsp;<Moment filter={toUpperCaseFilter} fromNow>{item.time_elapsed}</Moment>&nbsp;\r\n                  </Box>\r\n              </CardContent>\r\n              {/* </CardActionArea> */}\r\n              {/* <CardActions>\r\n                <Button size=\"small\" color=\"primary\">\r\n                  Share\r\n      </Button>\r\n                <Button size=\"small\" color=\"primary\">\r\n                  Learn More\r\n      </Button>\r\n              </CardActions> */}\r\n            </Card>\r\n\r\n          </Grid>\r\n        } else {\r\n          // return <div key={index}>{article.title}</div>\r\n          return <Grid item xs={12} md={3} sm={3} key={index}>\r\n\r\n            <Card elevation={0} className={classes.cardsource}>\r\n              <CardActionArea>\r\n                <Link href={item.URL} underline=\"none\">\r\n                  <CardMedia\r\n                    component=\"img\"\r\n                    alt={item.title}\r\n                    height=\"140\"\r\n                    image={item.image}\r\n                    title={item.title}\r\n                    onError={addDefaultSrc}\r\n                  />\r\n\r\n                </Link>\r\n                <Box className={classes.productImageOverlay}></Box>\r\n              </CardActionArea>\r\n              <CardContent>\r\n\r\n\r\n                <Box display=\"flex\">\r\n                  <Box  order={1}>\r\n                    <Avatar className={classes.small}>\r\n                    <PublicIcon style={{fontSize:'11px'}} />\r\n                    </Avatar>\r\n                  </Box>\r\n                  <Box pl={1} order={2}>\r\n                    <Link href={item.URL} underline=\"none\" color=\"inherit\">\r\n                      <Typography gutterBottom variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n\r\n                        {urlparser(item.URL)}\r\n                      </Typography>\r\n                    </Link>\r\n                  </Box>\r\n\r\n                </Box>\r\n                <Box className={classes.content}>\r\n                  <Link href={item.URL} underline=\"none\" color=\"inherit\" target=\"_blank\">\r\n                    <Typography variant=\"h6\" component=\"p\">\r\n                      {item.title}\r\n                    </Typography>\r\n                  </Link>\r\n                </Box>\r\n\r\n                <Box className={classes.tagcontent}>\r\n                  <Box className={classes.tagtext}>\r\n                  <LocalOfferIcon  style={{ color: \"lightgray\",fontSize:'1rem' }} />\r\n                  \r\n\r\n\r\n                  {item.keytags.map((val, index) => (\r\n                    // <Chip size=\"small\" key={index} label={val} style={{ margin: \"2px\", wrap: 'wrap', overflow: 'hidden' }} id={val} onClick={(e) => { setQuery(val); setPageNumber(1) }} />\r\n                    <div key={index}  className={classes.tagcategorytesting} id={val} onClick={(e) => { setQuery(val); setPageNumber(1) }}>{val}</div>\r\n                  ))}\r\n                </Box>\r\n                </Box>\r\n                <Box display=\"flex\" justifyContent=\"flex-start\" alignItems=\"center\">\r\n                  <AccessTimeIcon style={{fontSize:'14px'}} />\r\n                    &nbsp;<Moment filter={toUpperCaseFilter} fromNow>{item.time_elapsed}</Moment>&nbsp;\r\n                  </Box>\r\n              </CardContent>\r\n              {/* </CardActionArea> */}\r\n              {/* <CardActions>\r\n                <Button size=\"small\" color=\"primary\">\r\n                  Share\r\n      </Button>\r\n                <Button size=\"small\" color=\"primary\">\r\n                  Learn More\r\n      </Button>\r\n              </CardActions> */}\r\n            </Card>\r\n\r\n          </Grid>\r\n\r\n        }\r\n      })}\r\n      <Grid item xs={12} style={{ marginLeft: '45%' }}>\r\n        {loading && <CircularProgress disableShrink />}\r\n        {error && 'Error'}\r\n        {errormsg}\r\n        {/* {!hasMore && <Button size=\"small\" color=\"primary\">\r\n          No more Records\r\n            </Button>} */}\r\n      \r\n      </Grid>\r\n      </Grid>\r\n    </>\r\n  )\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default Articles\r\n","E:\\material-django-react\\materialdjango\\frontend\\src\\Pages\\Data\\Articleiteration.js",["346","347","348","349","350","351"],"E:\\material-django-react\\materialdjango\\frontend\\src\\Pages\\Data\\Articleform.js",["352"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst Articleform = (props) => {\r\n    \r\n    \r\n    return (\r\n        <>\r\n            <form id=\"submitformforkwd\" method=\"post\" className=\"form-inline text-center ml-2\" style={{ marginTop: \"1%\" }}>\r\n                <label>Keyword: </label>\r\n                <input value={props.searchword} className=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Enter keyword\"\r\n                    name=\"search_keyword\" id=\"search_keyword\"\r\n                    onChange={props.handleChange}\r\n                />\r\n\r\n\r\n                <label>Category: </label>\r\n\r\n                <select name=\"category\" id=\"category\"\r\n                    className=\"form-control\"\r\n                    value={props.category}\r\n                    onChange={props.handleChange}\r\n                >\r\n                    <option value=\"All\">All</option>\r\n                    {props.allcats.map((item, key) => {\r\n                        return <option key={item.id} value={item.id}>{item.category}</option>\r\n                    })}\r\n\r\n\r\n                </select>\r\n\r\n                <label>Order By :</label>\r\n\r\n\r\n                <select value = {props.stateval} className=\"form-control\" name=\"orderby\" id=\"orderby\"\r\n                    onChange={props.handleChange}\r\n                >\r\n                    <option value=\"\">Choose</option>\r\n                    <option value=\"oldest\">Oldest</option>\r\n                    <option value=\"newest\">Newest</option>\r\n                    \r\n                </select>\r\n\r\n                <button className=\"btn btn-primary\" onClick={props.handleSubmit}>Search</button>\r\n            </form>\r\n            \r\n            \r\n            {/* <div className=\"totalrecords\">TotalRecords Found: {props.foundrecords} Of {props.totalrecords}</div> */}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Articleform;",["353","354"],"E:\\material-django-react\\materialdjango\\frontend\\src\\Pages\\Data\\useArticleSearch.js",["355"],"import { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\n\r\nexport default function useArticleSearch(query, pageNumber, orderby) {\r\n    \r\n    const [loading, setLoading] = useState(true)\r\n    const [error, setError] = useState(false)\r\n    const [articles, setArticles] = useState([])\r\n    const [hasMore, setHasMore] = useState(false)\r\n    \r\n    useEffect(() => {\r\n        setArticles([])\r\n        pageNumber=1\r\n    }, [query,orderby])\r\n\r\n    useEffect(() => {\r\n        if(!localStorage.getItem('remain')) return;\r\n        setLoading(true)\r\n        setError(false)\r\n        let cancel\r\n        axios({\r\n            method: 'GET',\r\n            url: 'https://app.kiranvoleti.com/user/articles_scroll_page/',\r\n            params: { q: query, page: pageNumber, orderby: orderby },\r\n            headers:{\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,         \r\n                // 'Authorization': 'JWT eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNjEwMDQ2OTIxLCJqdGkiOiJjOThiZjk5MjhjZjA0YjIyYTlmMWJlYTkxNTU2Njk3NSIsInVzZXJfaWQiOjF9.LVg285l2hEj2hqW56kFafMMU9lC2eFYSF_LMse9epuo',\r\n                'Accept': 'application/json'\r\n            },\r\n            \r\n            cancelToken: new axios.CancelToken(c => cancel = c)\r\n        }).then(res => {\r\n            setArticles(prevArticles => {\r\n                return [...new Set([...prevArticles, ...res.data.response])]\r\n            })\r\n            setHasMore(res.data.response.length > 0)\r\n            setLoading(false)\r\n        }).catch(e => {\r\n            console.log(e)\r\n            setLoading(false)\r\n            if (axios.isCancel(e)) return\r\n            setError(true)\r\n        })\r\n        return () => cancel()\r\n    }, [query, pageNumber,orderby])\r\n\r\n    return { loading, error, articles, hasMore }\r\n}\r\n\r\n","E:\\material-django-react\\materialdjango\\frontend\\src\\Pages\\Data\\Videos.js",["356","357","358","359"],"E:\\material-django-react\\materialdjango\\frontend\\src\\Pages\\Data\\useVideoSearch.js",["360"],"import { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\n\r\nexport default function useVideoSearch(query, pageNumber, orderby) {\r\n\r\n    const [loading, setLoading] = useState(true)\r\n    const [error, setError] = useState(false)\r\n    const [videos, setVideos] = useState([])\r\n    const [hasMore, setHasMore] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setVideos([])\r\n        pageNumber=1\r\n\r\n    }, [query,orderby])\r\n\r\n    useEffect(() => {\r\n        if(!localStorage.getItem('remain')) return;\r\n        setLoading(true)\r\n        setError(false)\r\n        let cancel\r\n        axios({\r\n            method: 'GET',\r\n            url: 'https://app.kiranvoleti.com/user/videos_scroll_page/',\r\n            params: { q: query, page: pageNumber, orderby: orderby },\r\n            headers:{\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,   \r\n                // 'Authorization': 'JWT eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNjEwMDQ2OTIxLCJqdGkiOiJjOThiZjk5MjhjZjA0YjIyYTlmMWJlYTkxNTU2Njk3NSIsInVzZXJfaWQiOjF9.LVg285l2hEj2hqW56kFafMMU9lC2eFYSF_LMse9epuo',             \r\n                'Accept': 'application/json'\r\n            },\r\n            cancelToken: new axios.CancelToken(c => cancel = c)\r\n        }).then(res => {\r\n            setVideos(prevVideos => {\r\n                return [...new Set([...prevVideos, ...res.data.response])]\r\n            })\r\n            setHasMore(res.data.response.length > 0)\r\n            setLoading(false)\r\n        }).catch(e => {\r\n            console.log(e)\r\n            setLoading(false)\r\n            if (axios.isCancel(e)) return\r\n            setError(true)\r\n        })\r\n        return () => cancel()\r\n    }, [query, pageNumber,orderby])\r\n\r\n    return { loading, error, videos, hasMore }\r\n}\r\n\r\n","E:\\material-django-react\\materialdjango\\frontend\\src\\Pages\\Data\\Pricing.js",[],"E:\\material-django-react\\materialdjango\\frontend\\src\\Components\\Modal\\Dialogue.js",["361"],"E:\\material-django-react\\materialdjango\\frontend\\src\\Components\\Modal\\ModalPortal.js",[],"E:\\material-django-react\\materialdjango\\frontend\\src\\Pages\\Data\\Tools.js",["362","363","364","365","366","367","368","369","370"],"import React, { useState, useRef, useCallback } from 'react'\r\nimport useToolsSearch from './useToolsSearch'\r\nimport { CircularProgress, Button, Grid, Avatar, Box, Chip, TextField, MenuItem, FormControl, InputLabel, Input, FormHelperText, Link } from '@material-ui/core';\r\nimport Moment from 'react-moment';\r\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\r\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\r\nimport PublicIcon from '@material-ui/icons/Public';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root:{},\r\n  cardsource: {\r\n    // maxWidth:'370px',\r\n    // maxWidth: '340px',\r\n    // boxSizing:'border-box',\r\n    marginTop: '1%',\r\n    borderRadius:'0px',\r\n    '& .MuiCardContent-root': {\r\n      padding: '22px',\r\n      minHeight: '230px',\r\n      maxHeight: '230px',\r\n    },\r\n    '& .MuiTypography-h6': {\r\n      margin: '5px auto',\r\n      paddingTop: '2%',\r\n      maxHeight: '95px',\r\n      minHeight: '95px',\r\n      overflow: 'hidden',\r\n      justifyContent: 'center'\r\n    },\r\n    '& .MuiSelect-outlined.MuiSelect-outlined': {\r\n      paddingRight: '50px'\r\n\r\n    },\r\n    '& a': {\r\n      textDecoration: 'none'\r\n    }\r\n\r\n\r\n  },\r\n  small: {\r\n    width:'10px',\r\n    height:'10px',\r\n    top:'5.5px'\r\n  },\r\n  content: {\r\n    padding: '2px auto auto atuo'\r\n  },\r\n\r\n  formalign: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: '50px'\r\n    }\r\n  },\r\n  buttonalign: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: '100px'\r\n    },\r\n    [theme.breakpoints.down('sm')]: {\r\n      marginLeft: '30px'\r\n    },\r\n  },\r\n  card: {\r\n    position: 'relative',\r\n  },\r\n  productImageOverlay: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n    height: '140px',\r\n    width: '100%',\r\n    opacity: 0.2,\r\n    transition: '.5s ease',\r\n    background: 'black',\r\n    // zIndex:5555,  \r\n    backgroundImage: 'linear-gradient(to bottom, rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.1))',\r\n    cursor: 'pointer',\r\n    '&:hover': {\r\n      opacity: 0.5\r\n    }\r\n  },\r\n  \r\n  tagcontent:{\r\n    position: 'relative',\r\n    marginTop: 'auto',\r\n    paddingTop: '5%',\r\n    display: 'flex',\r\n    maxHeight: '56px',\r\n    minHeight: '56px',\r\n    overflow: 'hidden',\r\n    justifyContent: 'flex-start',\r\n    alignItems: 'center'\r\n  },\r\n  tagtext:{\r\n    marginTop: '5px',\r\n    fontSize: '8px',\r\n    position: 'relative',      \r\n    color: '#5c5a5a',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    cursor: 'pointer'\r\n  },\r\n  tagcategorytesting:{\r\n    alignItems:\"center\",\r\n    backgroundColor: '#f9f9f9',\r\n      padding: '5px',\r\n      color: '#030303',\r\n      height: '24px',\r\n      minWidth: '12px',\r\n      fontSize: '11px',\r\n      // padding: 'auto 0px',\r\n      borderRadius: '16px',\r\n      boxSizing: 'border-box',\r\n      outline: 'none',\r\n      overflow: 'hidden',\r\n      \r\n      /* user-select: none; */\r\n      textAlign: 'center',\r\n      verticalAlign: 'baseline',\r\n      /* margin-bottom: -11.5rem; */\r\n      marginTop: '-0.5rem',\r\n      marginRight: '3px',\r\n      cursor: 'pointer'\r\n  },\r\n  searchformcustom:{\r\n    display:\"flex\",\r\n    alignItems:\"center\",\r\n    justifyContent:\"space-between\",\r\n    \r\n    '& .MuiSelect-select':{\r\n      minWidth:'150px'\r\n    },\r\n    [theme.breakpoints.down('sm')]: {\r\n      justifyContent:\"flex-start\",\r\n      margin:'5px 3px'\r\n    }\r\n  }\r\n}));\r\nconst toUpperCaseFilter = (d) => {\r\n  if (d === \"a day ago\") {\r\n    return d.replace(\"a day ago\", \"1 day ago\");\r\n  } else if (d === \"a month ago\") {\r\n    return d.replace(\"a month ago\", \"1 month ago\");\r\n  } else if (d === \"a year ago\") {\r\n    return d.replace(\"a year ago\", \"1 year ago\");\r\n  }\r\n  else {\r\n    return d;\r\n  }\r\n\r\n};\r\n\r\nconst Tools = () => {\r\n\r\n  const [query, setQuery] = useState('')\r\n  const [pageNumber, setPageNumber] = useState(1)\r\n  const [orderby, setOrderby] = useState('newest')\r\n  const [errormsg, setErrormsg] = useState('')\r\n  React.useEffect(() => {\r\n    if (!localStorage.getItem('remain')) {\r\n      setErrormsg('Your Plan is Expired! Upgrade Now')      \r\n      \r\n    }\r\n  \r\n  }, [])\r\n\r\n  const {\r\n    tools,\r\n    hasMore,\r\n    loading,\r\n    error\r\n  } = useToolsSearch(query, pageNumber, orderby)\r\n  const classes = useStyles();\r\n\r\n\r\n  const observer = useRef()\r\n  const lastBookElementRef = useCallback(node => {\r\n    if (loading) return\r\n    if (observer.current) observer.current.disconnect()\r\n    observer.current = new IntersectionObserver(entries => {\r\n      if (entries[0].isIntersecting && hasMore) {\r\n        setPageNumber(prevPageNumber => prevPageNumber + 1)\r\n      }\r\n    })\r\n    if (node) observer.current.observe(node)\r\n  }, [loading, hasMore])\r\n\r\n  function handleSearch(e) {\r\n\r\n    setOrderby(orderby)\r\n    setPageNumber(1)\r\n  }\r\n\r\n  function keytagsearch(e) {\r\n    // setPageNumber(1)\r\n    console.log(e)\r\n    setQuery(e.target.id)\r\n  }\r\n\r\n\r\n  const urlparser = (url) => {\r\n    var parser = new URL(url);\r\n    var newurl = parser.host;\r\n    return newurl;\r\n  }\r\n\r\n  const addDefaultSrc = (ev) => {\r\n    ev.target.src = 'https://app.kiranvoleti.com/static/assets/images/imagenotfound.jpg'\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Grid container style={{ backgroundColor: \"#fff\", padding: '0.6% 0 0 2%', minHeight:'100px' }}\r\n        alignContent=\"center\"\r\n        alignItems=\"center\"\r\n        justify=\"flex-start\"\r\n      >\r\n\r\n\r\n\r\n\r\n        <Grid item xs={12} md={3} sm={5}>\r\n          \r\n          <Box className={classes.searchformcustom}>\r\n          <label>Query : </label>\r\n          <TextField id=\"outlined-basic\"\r\n            label=\"keyword\"\r\n            variant=\"outlined\"\r\n            size=\"small\"            \r\n            onChange={(e) => setQuery(e.target.value)}\r\n          />\r\n          </Box>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={5} sm={12} className={classes.formalign}>\r\n        <Box className={classes.searchformcustom}>\r\n          <InputLabel >Order : </InputLabel>\r\n          <TextField\r\n            id=\"outlined-select-currency\"\r\n            select\r\n            label=\"Select\"\r\n            size=\"small\"\r\n            onChange={(e) => setOrderby(e.target.value)}            \r\n            variant=\"outlined\"\r\n          >\r\n\r\n            <MenuItem key='newest' value='newest'>\r\n              New\r\n            </MenuItem>\r\n            <MenuItem key='oldest' value='oldest'>\r\n              Oldest\r\n            </MenuItem>\r\n\r\n          </TextField>\r\n          \r\n          <Button onClick={handleSearch} className={classes.buttonalign} variant=\"contained\" color=\"primary\">Submit</Button>\r\n          </Box>\r\n        </Grid>\r\n\r\n        </Grid>\r\n        <Grid container spacing={2}>\r\n      {tools.map((item, index) => {\r\n        if (tools.length === index + 1) {\r\n          // return <div ref={lastBookElementRef} key={index}>{article.title}</div>\r\n          return <Grid item xs={12} md={3} sm={3} key={index} ref={lastBookElementRef}>\r\n\r\n<Card elevation={0} className={classes.cardsource}>\r\n              <CardActionArea>\r\n                <Link href={`/view_website/${item.id}/${item.category.toLowerCase()}`} underline=\"none\">\r\n                  <CardMedia\r\n                    component=\"img\"\r\n                    alt={item.title}\r\n                    height=\"140\"\r\n                    image={item.image ? item.image:'https://app.kiranvoleti.com/static/assets/images/imagenotfound.jpg'}\r\n                    title={item.title}\r\n                    onError={addDefaultSrc}\r\n                  />\r\n                \r\n                \r\n                <Box className={classes.productImageOverlay}></Box>\r\n                </Link>\r\n              </CardActionArea>\r\n              <CardContent>\r\n\r\n\r\n                <Box display=\"flex\">\r\n                  <Box>\r\n                    <Avatar className={classes.small}>\r\n                      <PublicIcon fontSize=\"small\" />\r\n                    </Avatar>\r\n                  </Box>\r\n                  <Box pl={1}>\r\n                    <Link href={`/view_website/${item.id}/${item.category.toLowerCase()}`} underline=\"none\" color=\"inherit\">\r\n                      <Typography gutterBottom variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n\r\n                        {urlparser(item.URL)}\r\n                      </Typography>\r\n                    </Link>\r\n                  </Box>\r\n\r\n                </Box>\r\n                <Box className={classes.content}>\r\n                  <Link href={`/view_website/${item.id}/${item.category.toLowerCase()}`} underline=\"none\" color=\"inherit\">\r\n                    <Typography variant=\"h6\" component=\"p\">\r\n                      {item.title}\r\n                    </Typography>\r\n                  </Link>\r\n                </Box>\r\n\r\n                <Box className={classes.tagcontent}>\r\n                  <Box className={classes.tagtext}>\r\n                  <LocalOfferIcon  style={{ color: \"lightgray\",fontSize:'1rem' }} />\r\n                  \r\n\r\n\r\n                  {item.keytags.map((val, index) => (\r\n                    // <Chip size=\"small\" key={index} label={val} style={{ margin: \"2px\", wrap: 'wrap', overflow: 'hidden' }} id={val} onClick={(e) => { setQuery(val); setPageNumber(1) }} />\r\n                    <div key={index}  className={classes.tagcategorytesting} id={val} onClick={(e) => { setQuery(val); setPageNumber(1) }}>{val}</div>\r\n                  ))}\r\n                </Box>\r\n                </Box>\r\n                {/* <Box display=\"flex\" justifyContent=\"flex-start\" alignItems=\"center\">\r\n                  <AccessTimeIcon fontSize='small' />\r\n                    &nbsp;<Moment filter={toUpperCaseFilter} fromNow>{item.time_elapsed}</Moment>&nbsp;\r\n                  </Box> */}\r\n              </CardContent>\r\n              \r\n            </Card>\r\n\r\n          </Grid>\r\n        } else {\r\n          // return <div key={index}>{article.title}</div>\r\n          return <Grid item xs={12} md={3} sm={3} key={index}>\r\n\r\n            <Card elevation={0} className={classes.cardsource}>\r\n              <CardActionArea>\r\n                <Link href={`/view_website/${item.id}/${item.category.toLowerCase()}`} underline=\"none\">\r\n                  <CardMedia\r\n                    component=\"img\"\r\n                    alt={item.title}\r\n                    height=\"140\"\r\n                    image={item.image ? item.image:'https://app.kiranvoleti.com/static/assets/images/imagenotfound.jpg'}\r\n                    title={item.title}\r\n                    onError={addDefaultSrc}\r\n                  />\r\n                \r\n                \r\n                <Box className={classes.productImageOverlay}></Box>\r\n                </Link>\r\n              </CardActionArea>\r\n              <CardContent>\r\n\r\n\r\n                <Box display=\"flex\">\r\n                  <Box>\r\n                    <Avatar className={classes.small}>\r\n                      <PublicIcon fontSize=\"small\" />\r\n                    </Avatar>\r\n                  </Box>\r\n                  <Box pl={1}>\r\n                    <Link href={`/view_website/${item.id}/${item.category.toLowerCase()}`} underline=\"none\" color=\"inherit\">\r\n                      <Typography gutterBottom variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n\r\n                        {urlparser(item.URL)}\r\n                      </Typography>\r\n                    </Link>\r\n                  </Box>\r\n\r\n                </Box>\r\n                <Box className={classes.content}>\r\n                  <Link href={`/view_website/${item.id}/${item.category.toLowerCase()}`} underline=\"none\" color=\"inherit\">\r\n                    <Typography variant=\"h6\" component=\"p\">\r\n                      {item.title}\r\n                    </Typography>\r\n                  </Link>\r\n                </Box>\r\n\r\n                <Box className={classes.tagcontent}>\r\n                  <Box className={classes.tagtext}>\r\n                  <LocalOfferIcon  style={{ color: \"lightgray\",fontSize:'1rem' }} />\r\n                  \r\n\r\n\r\n                  {item.keytags.map((val, index) => (\r\n                    // <Chip size=\"small\" key={index} label={val} style={{ margin: \"2px\", wrap: 'wrap', overflow: 'hidden' }} id={val} onClick={(e) => { setQuery(val); setPageNumber(1) }} />\r\n                    <div key={index}  className={classes.tagcategorytesting} id={val} onClick={(e) => { setQuery(val); setPageNumber(1) }}>{val}</div>\r\n                  ))}\r\n                </Box>\r\n                </Box>\r\n                {/* <Box display=\"flex\" justifyContent=\"flex-start\" alignItems=\"center\">\r\n                  <AccessTimeIcon fontSize='small' />\r\n                    &nbsp;<Moment filter={toUpperCaseFilter} fromNow>{item.time_elapsed}</Moment>&nbsp;\r\n                  </Box> */}\r\n              </CardContent>\r\n              \r\n            </Card>\r\n\r\n          </Grid>\r\n          \r\n\r\n        }\r\n      })}\r\n      <Grid item xs={12} style={{ marginLeft: '45%' }}>\r\n        {loading && <CircularProgress disableShrink />}\r\n        {error && 'Error'}\r\n        {errormsg}\r\n        {/* {!hasMore && <Button size=\"small\" color=\"primary\">\r\n          No more Records\r\n            </Button>} */}\r\n      </Grid>\r\n      </Grid>\r\n    </>\r\n  )\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default Tools\r\n","E:\\material-django-react\\materialdjango\\frontend\\src\\Pages\\Data\\useToolsSearch.js",["371"],"import { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\n\r\nexport default function useArticleSearch(query, pageNumber, orderby) {\r\n\r\n    const [loading, setLoading] = useState(true)\r\n    const [error, setError] = useState(false)\r\n    const [tools, setTools] = useState([])\r\n    const [hasMore, setHasMore] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setTools([])\r\n        pageNumber=1\r\n    }, [query,orderby])\r\n\r\n    useEffect(() => {\r\n        if(!localStorage.getItem('remain')) return;\r\n        setLoading(true)\r\n        setError(false)\r\n        let cancel\r\n        axios({\r\n            method: 'GET',\r\n            url: 'https://app.kiranvoleti.com/user/tools_scroll_page/',\r\n            params: { q: query, page: pageNumber, orderby: orderby },\r\n            headers:{\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,                \r\n                'Accept': 'application/json'\r\n            },\r\n            \r\n            cancelToken: new axios.CancelToken(c => cancel = c)\r\n        }).then(res => {\r\n            setTools(prevTools => {\r\n                return [...new Set([...prevTools, ...res.data.response])]\r\n            })\r\n            setHasMore(res.data.response.length > 0)\r\n            setLoading(false)\r\n        }).catch(e => {\r\n            console.log(e)\r\n            setLoading(false)\r\n            if (axios.isCancel(e)) return\r\n            setError(true)\r\n        })\r\n        return () => cancel()\r\n    }, [query, pageNumber,orderby])\r\n\r\n    return { loading, error, tools, hasMore }\r\n}\r\n\r\n","E:\\material-django-react\\materialdjango\\frontend\\src\\Pages\\Payments\\checkout.js",["372","373","374"],"import React from 'react';\r\n\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport {\r\n  Elements,\r\n\r\n} from \"@stripe/react-stripe-js\";\r\n\r\nimport axios from \"axios\";\r\nimport CheckoutForm from './checkoutform';\r\nimport { Redirect,useHistory } from 'react-router-dom';\r\n\r\n  // you should use env variables here to not commit this\r\n  // but it is a public key anyway, so not as sensitive\r\n  const stripePromise = loadStripe(\"pk_test_51H2GwkFM3Q6O7DuK3XgFpJhO5snlKligZL0EKLRoyynRKVIfxsPFyN0Z9KPxZmmmYJCwJY7MbnzqKgRybQpiZz7000KK2MEv5c\");\r\n  \r\n  const Index = () => {\r\n    const [status, setStatus] = React.useState(\"ready\");\r\n    let history = useHistory();\r\n\r\n    const search = window.location.search;\r\n    const params = new URLSearchParams(search);\r\n    const inr = params.get('inr');    \r\n    if (inr == 0){\r\n      alert('free service')\r\n      const formdata = new FormData();\r\n      const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n            'Accept': 'application/json'\r\n        }\r\n    };\r\n      axios.post(\"https://app.kiranvoleti.com/save_stripe_info/\",formdata,config)\r\n      .then(res=>{\r\n        window.location.replace(\"/profile\")\r\n      })\r\n      \r\n    }\r\n    \r\n    \r\n   \r\n    \r\n    if (status === \"success\") {\r\n      return <div>Congrats on your empanadas!</div>;\r\n    }\r\n    if (!localStorage.getItem('email')){\r\n      alert('Please Provide an Email')\r\n      // window.location.replace('/profile')\r\n    } \r\n    return (\r\n     \r\n      <>\r\n      \r\n      <div style={{\r\n      background: 'linear-gradient(to right, #4286f4, #373B44)'}}>\r\n\r\n        \r\n         \r\n      <Elements stripe={stripePromise}>\r\n       \r\n        <CheckoutForm\r\n          success={() => {\r\n            setStatus(\"success\");\r\n          }}\r\n        />\r\n      </Elements>\r\n      </div>\r\n      </>\r\n \r\n    );\r\n  };\r\n  \r\n  export default Index;","E:\\material-django-react\\materialdjango\\frontend\\src\\Pages\\Payments\\checkoutform.js",["375"],"import React from 'react';\r\nimport './checkoutform.css'\r\nimport stripeimage from '../../assets/images/stripepayment.jpg'\r\n\r\nimport {\r\n  \r\n  CardElement,\r\n  useStripe,\r\n\r\n  useElements\r\n} from \"@stripe/react-stripe-js\";\r\nimport axios from 'axios';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { Box, LinearProgress } from '@material-ui/core';\r\nimport { NavLink, useHistory  } from 'react-router-dom';\r\n\r\n// You can customize your Elements to give it the look and feel of your site.\r\nconst CheckoutForm = ({ success, ...rest }) => {\r\n    const [process,setProcess] = React.useState(false)\r\n    const [paymentsuccess, setPaymentsuccess] = React.useState(false)\r\n    const [paymentfail, setPaymentfail] = React.useState(false)\r\n    const [useremail,setUseremail] = React.useState(localStorage.getItem('email'));\r\n    const [logincondition,setLogincondition] = React.useState(localStorage.getItem('userid'));\r\n    \r\n    let history = useHistory();\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n  \r\n    const handleSubmit = async event => {\r\n      event.preventDefault();\r\n      setProcess(true)\r\n        \r\n      const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n        type: \"card\",\r\n        card: elements.getElement(CardElement),\r\n        \r\n      });\r\n  \r\n      if (!error) {\r\n        const { id } = paymentMethod;\r\n        const form_data = new FormData();\r\n        form_data.append('id',id)\r\n        form_data.append('useremail',localStorage.getItem('email'))\r\n        form_data.append('tier',gettierval())\r\n        const config = {\r\n          headers: {\r\n              'Content-Type': 'application/json',\r\n              'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n              'Accept': 'application/json'\r\n          }\r\n      };\r\n        \r\n        \r\n\r\n        try {\r\n          await axios.post(\"https://app.kiranvoleti.com/createcheckoutsession/\",form_data,config);\r\n          setProcess(false);\r\n          setPaymentsuccess(true);\r\n          return setTimeout(function(){ return history.push('/profile'); }, 2000);\r\n\r\n          // success();\r\n        } catch (error) {\r\n          \r\n          await axios.get(\"https://app.kiranvoleti.com/cancel/\",config);\r\n          setProcess(false);\r\n          setPaymentfail(true);\r\n          setTimeout(function(){ return history.push('/pricing'); }, 2000);\r\n          \r\n        }\r\n      }\r\n    };\r\n    \r\n    const gettierval = () => {\r\n      const search = window.location.search;\r\n      const params = new URLSearchParams(search);\r\n      const tier = params.get('tier');    \r\n      return tier\r\n    }\r\n\r\n    const getprice = () => {\r\n      \r\n      const search = window.location.search;\r\n      const params = new URLSearchParams(search);\r\n      const inr = params.get('inr');    \r\n      return inr \r\n\r\n    }\r\n  \r\n    return (\r\n      <>\r\n      \r\n      <form\r\n        onSubmit={handleSubmit}\r\n        className=\"checkoutForm\"\r\n        style={{ maxWidth: \"500px\", margin: \"0 auto\",\r\n        backgroundColor:\"#fff\",padding:'5%',minHeight:'100vh',\r\n        alignContent:'center',paddingTop:'15vh',        \r\n        boxShadow: '0 4px 8px 0 rgba(0,0,0,0.2)',\r\n        transition: '0.3s'\r\n         \r\n    \r\n    }}\r\n        \r\n      >\r\n        <h3 style={{color:'red'}}>{logincondition ? 'Payment Process':<a href=\"/login\">Please Login</a>}</h3>\r\n       \r\n       <img src={stripeimage} alt=\"stripe_digitalbox\" height=\"130\"></img>\r\n       \r\n         {paymentsuccess? <Alert severity=\"success\">Payment Success Don't go Back! -- Your Payment is awaiting to Confirm</Alert>:null}\r\n         {paymentfail? <Alert severity=\"error\">Payment attempt is Fail ! try again</Alert>:null}\r\n         {process ? <Alert severity=\"info\">Payment is in Process -- Don't go Back!<LinearProgress /></Alert>: null}\r\n         \r\n         \r\n        <h2>Price: ${getprice()} USD</h2>\r\n        {logincondition ? <input placeholder=\"email\" disabled={useremail !=null} value={useremail} onChange={(e) => setUseremail(e.target.value)}/>:<input placeholder=\"email\" value={useremail} onChange={(e) => setUseremail(e.target.value)}/>}\r\n        \r\n        <CardElement />\r\n        {logincondition ? \r\n        <button type=\"submit\" disabled={!stripe}>\r\n          Pay\r\n        </button>:null}\r\n        <Box style={{paddingTop:'100px',float:'right'}}>\r\n          <NavLink to=\"/pricing\"> Back </NavLink>\r\n        </Box>\r\n        \r\n        \r\n      </form>\r\n      \r\n     \r\n    </>\r\n    );\r\n  };\r\nexport default CheckoutForm;","E:\\material-django-react\\materialdjango\\frontend\\src\\Components\\Controls\\ExtraNavMenu.js",["376","377","378","379"],{"ruleId":"380","replacedBy":"381"},{"ruleId":"382","replacedBy":"383"},{"ruleId":"384","severity":1,"message":"385","line":1,"column":17,"nodeType":"386","messageId":"387","endLine":1,"endColumn":26},{"ruleId":"384","severity":1,"message":"388","line":5,"column":6,"nodeType":"386","messageId":"387","endLine":5,"endColumn":10},{"ruleId":"384","severity":1,"message":"389","line":5,"column":12,"nodeType":"386","messageId":"387","endLine":5,"endColumn":23},{"ruleId":"384","severity":1,"message":"390","line":5,"column":24,"nodeType":"386","messageId":"387","endLine":5,"endColumn":29},{"ruleId":"384","severity":1,"message":"391","line":27,"column":25,"nodeType":"386","messageId":"387","endLine":27,"endColumn":33},{"ruleId":"384","severity":1,"message":"392","line":3,"column":16,"nodeType":"386","messageId":"387","endLine":3,"endColumn":20},{"ruleId":"380","replacedBy":"393"},{"ruleId":"382","replacedBy":"394"},{"ruleId":"384","severity":1,"message":"395","line":9,"column":8,"nodeType":"386","messageId":"387","endLine":9,"endColumn":12},{"ruleId":"384","severity":1,"message":"396","line":53,"column":12,"nodeType":"386","messageId":"387","endLine":53,"endColumn":20},{"ruleId":"384","severity":1,"message":"397","line":53,"column":22,"nodeType":"386","messageId":"387","endLine":53,"endColumn":33},{"ruleId":"384","severity":1,"message":"398","line":8,"column":8,"nodeType":"386","messageId":"387","endLine":8,"endColumn":19},{"ruleId":"384","severity":1,"message":"399","line":10,"column":8,"nodeType":"386","messageId":"387","endLine":10,"endColumn":14},{"ruleId":"384","severity":1,"message":"400","line":7,"column":8,"nodeType":"386","messageId":"387","endLine":7,"endColumn":15},{"ruleId":"384","severity":1,"message":"385","line":1,"column":17,"nodeType":"386","messageId":"387","endLine":1,"endColumn":26},{"ruleId":"384","severity":1,"message":"401","line":5,"column":17,"nodeType":"386","messageId":"387","endLine":5,"endColumn":22},{"ruleId":"384","severity":1,"message":"388","line":6,"column":5,"nodeType":"386","messageId":"387","endLine":6,"endColumn":9},{"ruleId":"384","severity":1,"message":"389","line":6,"column":11,"nodeType":"386","messageId":"387","endLine":6,"endColumn":22},{"ruleId":"384","severity":1,"message":"390","line":6,"column":24,"nodeType":"386","messageId":"387","endLine":6,"endColumn":29},{"ruleId":"384","severity":1,"message":"402","line":6,"column":42,"nodeType":"386","messageId":"387","endLine":6,"endColumn":46},{"ruleId":"384","severity":1,"message":"403","line":6,"column":48,"nodeType":"386","messageId":"387","endLine":6,"endColumn":56},{"ruleId":"384","severity":1,"message":"404","line":2,"column":16,"nodeType":"386","messageId":"387","endLine":2,"endColumn":32},{"ruleId":"384","severity":1,"message":"405","line":49,"column":11,"nodeType":"386","messageId":"387","endLine":49,"endColumn":15},{"ruleId":"406","severity":1,"message":"407","line":61,"column":35,"nodeType":"408","messageId":"409","endLine":61,"endColumn":37},{"ruleId":"410","severity":1,"message":"411","line":100,"column":6,"nodeType":"412","endLine":100,"endColumn":8,"suggestions":"413"},{"ruleId":"384","severity":1,"message":"414","line":1,"column":17,"nodeType":"386","messageId":"387","endLine":1,"endColumn":25},{"ruleId":"384","severity":1,"message":"415","line":3,"column":8,"nodeType":"386","messageId":"387","endLine":3,"endColumn":17},{"ruleId":"410","severity":1,"message":"416","line":40,"column":6,"nodeType":"412","endLine":40,"endColumn":12,"suggestions":"417"},{"ruleId":"384","severity":1,"message":"418","line":4,"column":8,"nodeType":"386","messageId":"387","endLine":4,"endColumn":14},{"ruleId":"384","severity":1,"message":"399","line":8,"column":3,"nodeType":"386","messageId":"387","endLine":8,"endColumn":9},{"ruleId":"384","severity":1,"message":"398","line":10,"column":3,"nodeType":"386","messageId":"387","endLine":10,"endColumn":14},{"ruleId":"384","severity":1,"message":"419","line":16,"column":8,"nodeType":"386","messageId":"387","endLine":16,"endColumn":13},{"ruleId":"380","replacedBy":"420"},{"ruleId":"382","replacedBy":"421"},{"ruleId":"384","severity":1,"message":"415","line":2,"column":8,"nodeType":"386","messageId":"387","endLine":2,"endColumn":17},{"ruleId":"384","severity":1,"message":"422","line":5,"column":3,"nodeType":"386","messageId":"387","endLine":5,"endColumn":9},{"ruleId":"384","severity":1,"message":"398","line":9,"column":3,"nodeType":"386","messageId":"387","endLine":9,"endColumn":14},{"ruleId":"384","severity":1,"message":"423","line":15,"column":3,"nodeType":"386","messageId":"387","endLine":15,"endColumn":7},{"ruleId":"384","severity":1,"message":"422","line":3,"column":5,"nodeType":"386","messageId":"387","endLine":3,"endColumn":11},{"ruleId":"384","severity":1,"message":"424","line":4,"column":5,"nodeType":"386","messageId":"387","endLine":4,"endColumn":8},{"ruleId":"384","severity":1,"message":"398","line":7,"column":5,"nodeType":"386","messageId":"387","endLine":7,"endColumn":16},{"ruleId":"384","severity":1,"message":"425","line":10,"column":5,"nodeType":"386","messageId":"387","endLine":10,"endColumn":15},{"ruleId":"384","severity":1,"message":"426","line":18,"column":24,"nodeType":"386","messageId":"387","endLine":18,"endColumn":29},{"ruleId":"384","severity":1,"message":"427","line":18,"column":31,"nodeType":"386","messageId":"387","endLine":18,"endColumn":43},{"ruleId":"384","severity":1,"message":"422","line":3,"column":5,"nodeType":"386","messageId":"387","endLine":3,"endColumn":11},{"ruleId":"384","severity":1,"message":"424","line":4,"column":5,"nodeType":"386","messageId":"387","endLine":4,"endColumn":8},{"ruleId":"384","severity":1,"message":"399","line":5,"column":5,"nodeType":"386","messageId":"387","endLine":5,"endColumn":11},{"ruleId":"384","severity":1,"message":"398","line":7,"column":5,"nodeType":"386","messageId":"387","endLine":7,"endColumn":16},{"ruleId":"384","severity":1,"message":"425","line":10,"column":5,"nodeType":"386","messageId":"387","endLine":10,"endColumn":15},{"ruleId":"384","severity":1,"message":"428","line":18,"column":10,"nodeType":"386","messageId":"387","endLine":18,"endColumn":16},{"ruleId":"384","severity":1,"message":"429","line":18,"column":18,"nodeType":"386","messageId":"387","endLine":18,"endColumn":22},{"ruleId":"384","severity":1,"message":"426","line":18,"column":24,"nodeType":"386","messageId":"387","endLine":18,"endColumn":29},{"ruleId":"384","severity":1,"message":"427","line":18,"column":31,"nodeType":"386","messageId":"387","endLine":18,"endColumn":43},{"ruleId":"384","severity":1,"message":"430","line":20,"column":8,"nodeType":"386","messageId":"387","endLine":20,"endColumn":19},{"ruleId":"384","severity":1,"message":"431","line":37,"column":7,"nodeType":"386","messageId":"387","endLine":37,"endColumn":25},{"ruleId":"384","severity":1,"message":"432","line":42,"column":7,"nodeType":"386","messageId":"387","endLine":42,"endColumn":20},{"ruleId":"384","severity":1,"message":"433","line":49,"column":11,"nodeType":"386","messageId":"387","endLine":49,"endColumn":23},{"ruleId":"384","severity":1,"message":"415","line":4,"column":8,"nodeType":"386","messageId":"387","endLine":4,"endColumn":17},{"ruleId":"384","severity":1,"message":"434","line":1,"column":17,"nodeType":"386","messageId":"387","endLine":1,"endColumn":26},{"ruleId":"384","severity":1,"message":"435","line":2,"column":31,"nodeType":"386","messageId":"387","endLine":2,"endColumn":46},{"ruleId":"384","severity":1,"message":"436","line":7,"column":8,"nodeType":"386","messageId":"387","endLine":7,"endColumn":17},{"ruleId":"384","severity":1,"message":"437","line":9,"column":9,"nodeType":"386","messageId":"387","endLine":9,"endColumn":16},{"ruleId":"380","replacedBy":"438"},{"ruleId":"382","replacedBy":"439"},{"ruleId":"384","severity":1,"message":"440","line":5,"column":8,"nodeType":"386","messageId":"387","endLine":5,"endColumn":17},{"ruleId":"384","severity":1,"message":"441","line":6,"column":8,"nodeType":"386","messageId":"387","endLine":6,"endColumn":24},{"ruleId":"384","severity":1,"message":"442","line":7,"column":8,"nodeType":"386","messageId":"387","endLine":7,"endColumn":16},{"ruleId":"384","severity":1,"message":"426","line":20,"column":24,"nodeType":"386","messageId":"387","endLine":20,"endColumn":29},{"ruleId":"384","severity":1,"message":"427","line":20,"column":31,"nodeType":"386","messageId":"387","endLine":20,"endColumn":43},{"ruleId":"384","severity":1,"message":"440","line":5,"column":8,"nodeType":"386","messageId":"387","endLine":5,"endColumn":17},{"ruleId":"384","severity":1,"message":"441","line":6,"column":8,"nodeType":"386","messageId":"387","endLine":6,"endColumn":24},{"ruleId":"384","severity":1,"message":"442","line":7,"column":8,"nodeType":"386","messageId":"387","endLine":7,"endColumn":16},{"ruleId":"384","severity":1,"message":"426","line":17,"column":24,"nodeType":"386","messageId":"387","endLine":17,"endColumn":29},{"ruleId":"384","severity":1,"message":"427","line":17,"column":31,"nodeType":"386","messageId":"387","endLine":17,"endColumn":43},{"ruleId":"384","severity":1,"message":"440","line":5,"column":8,"nodeType":"386","messageId":"387","endLine":5,"endColumn":17},{"ruleId":"384","severity":1,"message":"441","line":6,"column":8,"nodeType":"386","messageId":"387","endLine":6,"endColumn":24},{"ruleId":"384","severity":1,"message":"442","line":7,"column":8,"nodeType":"386","messageId":"387","endLine":7,"endColumn":16},{"ruleId":"384","severity":1,"message":"426","line":17,"column":24,"nodeType":"386","messageId":"387","endLine":17,"endColumn":29},{"ruleId":"384","severity":1,"message":"427","line":17,"column":31,"nodeType":"386","messageId":"387","endLine":17,"endColumn":43},{"ruleId":"384","severity":1,"message":"443","line":106,"column":12,"nodeType":"386","messageId":"387","endLine":106,"endColumn":23},{"ruleId":"384","severity":1,"message":"444","line":342,"column":19,"nodeType":"386","messageId":"387","endLine":342,"endColumn":20},{"ruleId":"384","severity":1,"message":"445","line":19,"column":5,"nodeType":"386","messageId":"387","endLine":19,"endColumn":30},{"ruleId":"410","severity":1,"message":"446","line":20,"column":8,"nodeType":"412","endLine":20,"endColumn":10,"suggestions":"447"},{"ruleId":"410","severity":1,"message":"448","line":28,"column":8,"nodeType":"412","endLine":28,"endColumn":10,"suggestions":"449"},{"ruleId":"410","severity":1,"message":"450","line":35,"column":8,"nodeType":"412","endLine":35,"endColumn":18,"suggestions":"451"},{"ruleId":"384","severity":1,"message":"414","line":1,"column":17,"nodeType":"386","messageId":"387","endLine":1,"endColumn":25},{"ruleId":"384","severity":1,"message":"424","line":5,"column":3,"nodeType":"386","messageId":"387","endLine":5,"endColumn":6},{"ruleId":"384","severity":1,"message":"422","line":3,"column":5,"nodeType":"386","messageId":"387","endLine":3,"endColumn":11},{"ruleId":"384","severity":1,"message":"424","line":4,"column":5,"nodeType":"386","messageId":"387","endLine":4,"endColumn":8},{"ruleId":"384","severity":1,"message":"398","line":7,"column":5,"nodeType":"386","messageId":"387","endLine":7,"endColumn":16},{"ruleId":"384","severity":1,"message":"425","line":10,"column":5,"nodeType":"386","messageId":"387","endLine":10,"endColumn":15},{"ruleId":"384","severity":1,"message":"426","line":18,"column":24,"nodeType":"386","messageId":"387","endLine":18,"endColumn":29},{"ruleId":"384","severity":1,"message":"427","line":18,"column":31,"nodeType":"386","messageId":"387","endLine":18,"endColumn":43},{"ruleId":"384","severity":1,"message":"452","line":3,"column":55,"nodeType":"386","messageId":"387","endLine":3,"endColumn":59},{"ruleId":"384","severity":1,"message":"453","line":3,"column":82,"nodeType":"386","messageId":"387","endLine":3,"endColumn":93},{"ruleId":"384","severity":1,"message":"454","line":3,"column":107,"nodeType":"386","messageId":"387","endLine":3,"endColumn":112},{"ruleId":"384","severity":1,"message":"455","line":3,"column":114,"nodeType":"386","messageId":"387","endLine":3,"endColumn":128},{"ruleId":"384","severity":1,"message":"398","line":11,"column":8,"nodeType":"386","messageId":"387","endLine":11,"endColumn":19},{"ruleId":"384","severity":1,"message":"415","line":2,"column":8,"nodeType":"386","messageId":"387","endLine":2,"endColumn":17},{"ruleId":"384","severity":1,"message":"456","line":3,"column":8,"nodeType":"386","messageId":"387","endLine":3,"endColumn":14},{"ruleId":"384","severity":1,"message":"424","line":6,"column":15,"nodeType":"386","messageId":"387","endLine":6,"endColumn":18},{"ruleId":"384","severity":1,"message":"457","line":24,"column":7,"nodeType":"386","messageId":"387","endLine":24,"endColumn":24},{"ruleId":"384","severity":1,"message":"458","line":28,"column":11,"nodeType":"386","messageId":"387","endLine":28,"endColumn":18},{"ruleId":"384","severity":1,"message":"459","line":30,"column":11,"nodeType":"386","messageId":"387","endLine":30,"endColumn":24},{"ruleId":"384","severity":1,"message":"415","line":2,"column":8,"nodeType":"386","messageId":"387","endLine":2,"endColumn":17},{"ruleId":"380","replacedBy":"460"},{"ruleId":"382","replacedBy":"461"},{"ruleId":"410","severity":1,"message":"462","line":13,"column":20,"nodeType":"463","endLine":13,"endColumn":21},{"ruleId":"384","severity":1,"message":"452","line":3,"column":55,"nodeType":"386","messageId":"387","endLine":3,"endColumn":59},{"ruleId":"384","severity":1,"message":"464","line":7,"column":8,"nodeType":"386","messageId":"387","endLine":7,"endColumn":18},{"ruleId":"384","severity":1,"message":"398","line":11,"column":8,"nodeType":"386","messageId":"387","endLine":11,"endColumn":19},{"ruleId":"384","severity":1,"message":"465","line":209,"column":9,"nodeType":"386","messageId":"387","endLine":209,"endColumn":20},{"ruleId":"410","severity":1,"message":"462","line":13,"column":20,"nodeType":"463","endLine":13,"endColumn":21},{"ruleId":"384","severity":1,"message":"466","line":6,"column":8,"nodeType":"386","messageId":"387","endLine":6,"endColumn":25},{"ruleId":"384","severity":1,"message":"452","line":3,"column":55,"nodeType":"386","messageId":"387","endLine":3,"endColumn":59},{"ruleId":"384","severity":1,"message":"453","line":3,"column":82,"nodeType":"386","messageId":"387","endLine":3,"endColumn":93},{"ruleId":"384","severity":1,"message":"454","line":3,"column":107,"nodeType":"386","messageId":"387","endLine":3,"endColumn":112},{"ruleId":"384","severity":1,"message":"455","line":3,"column":114,"nodeType":"386","messageId":"387","endLine":3,"endColumn":128},{"ruleId":"384","severity":1,"message":"456","line":4,"column":8,"nodeType":"386","messageId":"387","endLine":4,"endColumn":14},{"ruleId":"384","severity":1,"message":"467","line":5,"column":8,"nodeType":"386","messageId":"387","endLine":5,"endColumn":22},{"ruleId":"384","severity":1,"message":"398","line":11,"column":8,"nodeType":"386","messageId":"387","endLine":11,"endColumn":19},{"ruleId":"384","severity":1,"message":"457","line":148,"column":7,"nodeType":"386","messageId":"387","endLine":148,"endColumn":24},{"ruleId":"384","severity":1,"message":"468","line":203,"column":12,"nodeType":"386","messageId":"387","endLine":203,"endColumn":24},{"ruleId":"410","severity":1,"message":"462","line":13,"column":20,"nodeType":"463","endLine":13,"endColumn":21},{"ruleId":"384","severity":1,"message":"391","line":11,"column":10,"nodeType":"386","messageId":"387","endLine":11,"endColumn":18},{"ruleId":"384","severity":1,"message":"469","line":19,"column":9,"nodeType":"386","messageId":"387","endLine":19,"endColumn":16},{"ruleId":"470","severity":1,"message":"471","line":24,"column":13,"nodeType":"472","messageId":"473","endLine":24,"endColumn":15},{"ruleId":"384","severity":1,"message":"474","line":23,"column":27,"nodeType":"386","messageId":"387","endLine":23,"endColumn":44},{"ruleId":"384","severity":1,"message":"437","line":5,"column":8,"nodeType":"386","messageId":"387","endLine":5,"endColumn":15},{"ruleId":"384","severity":1,"message":"475","line":7,"column":8,"nodeType":"386","messageId":"387","endLine":7,"endColumn":22},{"ruleId":"384","severity":1,"message":"422","line":8,"column":8,"nodeType":"386","messageId":"387","endLine":8,"endColumn":14},{"ruleId":"384","severity":1,"message":"425","line":9,"column":8,"nodeType":"386","messageId":"387","endLine":9,"endColumn":18},"no-native-reassign",["476"],"no-negated-in-lhs",["477"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Card' is defined but never used.","'CardContent' is defined but never used.","'Paper' is defined but never used.","'Redirect' is defined but never used.","'Fade' is defined but never used.",["476"],["477"],"'clsx' is defined but never used.","'anchorEl' is assigned a value but never used.","'setAnchorEl' is assigned a value but never used.","'CardActions' is defined but never used.","'Button' is defined but never used.","'Pricing' is defined but never used.","'Badge' is defined but never used.","'Menu' is defined but never used.","'MenuItem' is defined but never used.","'useScrollTrigger' is defined but never used.","'body' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'user'. Either include it or remove the dependency array. You can also do a functional update 'setUser(u => ...)' if you only need 'user' in the 'setUser' call.","ArrayExpression",["478"],"'useState' is defined but never used.","'PropTypes' is defined but never used.","React Hook React.useEffect has a missing dependency: 'values'. Either include it or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.",["479"],"'moment' is defined but never used.","'axios' is defined but never used.",["476"],["477"],"'Avatar' is defined but never used.","'Grid' is defined but never used.","'Box' is defined but never used.","'Typography' is defined but never used.","'Field' is defined but never used.","'ErrorMessage' is defined but never used.","'Formik' is defined but never used.","'Form' is defined but never used.","'FormikField' is defined but never used.","'notificationschema' is assigned a value but never used.","'initialValues' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'ReactNode' is defined but never used.","'FieldInputProps' is defined but never used.","'FormLabel' is defined but never used.","'Divider' is defined but never used.",["476"],["477"],"'TextField' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'requestSent' is assigned a value but never used.","'s' is assigned a value but never used.","'LOAD_USER_PROFILE_SUCCESS' is defined but never used.","React Hook React.useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside React.useEffect.",["480"],"React Hook React.useEffect has missing dependencies: 'location.search' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside React.useEffect.",["481"],"React Hook React.useEffect has missing dependencies: 'facebookAuthenticate' and 'isAuthenticated'. Either include them or remove the dependency array. If 'facebookAuthenticate' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["482"],"'Chip' is defined but never used.","'FormControl' is defined but never used.","'Input' is defined but never used.","'FormHelperText' is defined but never used.","'Moment' is defined but never used.","'toUpperCaseFilter' is assigned a value but never used.","'classes' is assigned a value but never used.","'addDefaultSrc' is assigned a value but never used.",["476"],["477"],"Assignments to the 'pageNumber' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","'PublicIcon' is defined but never used.","'handleClose' is assigned a value but never used.","'DialogContentText' is defined but never used.","'AccessTimeIcon' is defined but never used.","'keytagsearch' is defined but never used.","'history' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setLogincondition' is assigned a value but never used.","'ListItemAvatar' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"483","fix":"484"},{"desc":"485","fix":"486"},{"desc":"487","fix":"488"},{"desc":"489","fix":"490"},{"desc":"491","fix":"492"},"Update the dependencies array to be: [user]",{"range":"493","text":"494"},"Update the dependencies array to be: [user, values]",{"range":"495","text":"496"},"Update the dependencies array to be: [props]",{"range":"497","text":"498"},"Update the dependencies array to be: [location.search, props]",{"range":"499","text":"500"},"Update the dependencies array to be: [facebookAuthenticate, isAuthenticated, location]",{"range":"501","text":"502"},[2530,2532],"[user]",[784,790],"[user, values]",[458,460],"[props]",[834,836],"[location.search, props]",[1054,1064],"[facebookAuthenticate, isAuthenticated, location]"]